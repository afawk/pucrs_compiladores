   0  $accept : program $end

   1  program : declList

   2  $$1 :

   3  declList : typeVar IDENT $$1 declarations

   4  $$2 :

   5  declList : VOID IDENT $$2 methodDecl
   6           |

   7  $$3 :

   8  declarations : ';' $$3 declList

   9  $$4 :

  10  declarations : ',' $$4 listNameDecls ';' declList
  11               | methodDecl

  12  $$5 :

  13  methodDecl : '(' argsList ')' $$5 '{' statementList '}' declList

  14  $$6 :

  15  listNameDecls : IDENT $$6 nameDecls

  16  nameDecls : ',' listNameDecls
  17            |

  18  argsList : argRule argsListComma
  19           |

  20  argRule : typeVar IDENT

  21  argsListComma : ',' argRule argsListComma
  22                |

  23  statementList : statement statementList
  24                |

  25  statement : scopeFunVarDecls ';'
  26            | attribWithExpr ';'

  27  $$7 :

  28  statement : RETURN expression $$7 ';'

  29  $$8 :

  30  statement : FOR '(' scopeForVarDecls ';' expressionForDecls ';' counterForDecls ')' $$8 statementElements

  31  $$9 :

  32  $$10 :

  33  statement : WHILE '(' expression $$9 ')' $$10 statementElements

  34  $$11 :

  35  $$12 :

  36  statement : DO $$11 statementElements WHILE '(' expression $$12 ')'

  37  $$13 :

  38  statement : IF '(' expression $$13 ')' elseifStatement

  39  $$14 :

  40  statement : BREAK $$14 ';'

  41  $$15 :

  42  statement : CONTINUE $$15 ';'
  43            | SWITCH '(' expression ')' '{' listSwitchCase '}'

  44  elseifStatement : ELSE statementElements
  45                  |

  46  attribWithExpr : IDENT ATTRIB expression

  47  statementElements : statement
  48                    | '{' statementList '}'

  49  listSwitchCase : CASE validCaseSwitch statementSwitchCase
  50                 | DEFAULT statementSwitchCase
  51                 |

  52  validCaseSwitch : IDENT
  53                  | NUM
  54                  | TRUE
  55                  | FALSE

  56  statementSwitchCase : ':' statementElements listSwitchCase

  57  $$16 :

  58  scopeFunVarDecls : typeVar $$16 listScopeFunVar

  59  listScopeFunVar : attribWithExpr extendListScopeFunVar

  60  extendListScopeFunVar : ',' listScopeFunVar
  61                        |

  62  scopeForVarDecls : typeVar attribScopeForVars
  63                   |

  64  attribScopeForVars : IDENT ATTRIB expression extendScopeForVars

  65  extendScopeForVars : ',' attribScopeForVars
  66                     |

  67  expressionForDecls : expression
  68                     |

  69  counterForDecls : IDENT operatorIncr listCounterForDecls
  70                  |

  71  listCounterForDecls : ',' counterForDecls
  72                      |

  73  operatorIncr : INCREMENT
  74               | DECREMENT

  75  expressionWithFun : IDENT '(' argsSourceList ')'

  76  argsSourceList : expression expressionList

  77  expressionList : ',' argsSourceList
  78                 |

  79  expression : expression '+' expression
  80             | expression '-' expression
  81             | expression '*' expression
  82             | expression DIV expression
  83             | expression MOD expression
  84             | expression OR expression
  85             | expression AND expression
  86             | expression '<' expression
  87             | expression LEQ expression
  88             | expression EQ expression
  89             | expression GEQ expression
  90             | expression '>' expression
  91             | expression NEQ expression
  92             | NOT expression
  93             | '(' expression ')'
  94             | expressionWithFun
  95             | validCaseSwitch

  96  typeVar : DOUBLE
  97          | BOOL
  98          | INT
  99          | STRING
 100          | IDENT

state 0
	$accept : . program $end  (0)
	declList : .  (6)

	IDENT  shift 1
	INT  shift 2
	BOOL  shift 3
	VOID  shift 4
	DOUBLE  shift 5
	STRING  shift 6
	$end  reduce 6

	program  goto 7
	typeVar  goto 8
	declList  goto 9


state 1
	typeVar : IDENT .  (100)

	.  reduce 100


state 2
	typeVar : INT .  (98)

	.  reduce 98


state 3
	typeVar : BOOL .  (97)

	.  reduce 97


state 4
	declList : VOID . IDENT $$2 methodDecl  (5)

	IDENT  shift 10
	.  error


state 5
	typeVar : DOUBLE .  (96)

	.  reduce 96


state 6
	typeVar : STRING .  (99)

	.  reduce 99


state 7
	$accept : program . $end  (0)

	$end  accept


state 8
	declList : typeVar . IDENT $$1 declarations  (3)

	IDENT  shift 11
	.  error


state 9
	program : declList .  (1)

	.  reduce 1


state 10
	declList : VOID IDENT . $$2 methodDecl  (5)
	$$2 : .  (4)

	.  reduce 4

	$$2  goto 12


state 11
	declList : typeVar IDENT . $$1 declarations  (3)
	$$1 : .  (2)

	.  reduce 2

	$$1  goto 13


state 12
	declList : VOID IDENT $$2 . methodDecl  (5)

	'('  shift 14
	.  error

	methodDecl  goto 15


state 13
	declList : typeVar IDENT $$1 . declarations  (3)

	'('  shift 14
	';'  shift 16
	','  shift 17
	.  error

	declarations  goto 18
	methodDecl  goto 19


state 14
	methodDecl : '(' . argsList ')' $$5 '{' statementList '}' declList  (13)
	argsList : .  (19)

	IDENT  shift 1
	INT  shift 2
	BOOL  shift 3
	DOUBLE  shift 5
	STRING  shift 6
	')'  reduce 19

	typeVar  goto 20
	argsList  goto 21
	argRule  goto 22


state 15
	declList : VOID IDENT $$2 methodDecl .  (5)

	.  reduce 5


state 16
	declarations : ';' . $$3 declList  (8)
	$$3 : .  (7)

	.  reduce 7

	$$3  goto 23


state 17
	declarations : ',' . $$4 listNameDecls ';' declList  (10)
	$$4 : .  (9)

	.  reduce 9

	$$4  goto 24


state 18
	declList : typeVar IDENT $$1 declarations .  (3)

	.  reduce 3


state 19
	declarations : methodDecl .  (11)

	.  reduce 11


state 20
	argRule : typeVar . IDENT  (20)

	IDENT  shift 25
	.  error


state 21
	methodDecl : '(' argsList . ')' $$5 '{' statementList '}' declList  (13)

	')'  shift 26
	.  error


state 22
	argsList : argRule . argsListComma  (18)
	argsListComma : .  (22)

	','  shift 27
	')'  reduce 22

	argsListComma  goto 28


state 23
	declarations : ';' $$3 . declList  (8)
	declList : .  (6)

	IDENT  shift 1
	INT  shift 2
	BOOL  shift 3
	VOID  shift 4
	DOUBLE  shift 5
	STRING  shift 6
	$end  reduce 6

	typeVar  goto 8
	declList  goto 29


state 24
	declarations : ',' $$4 . listNameDecls ';' declList  (10)

	IDENT  shift 30
	.  error

	listNameDecls  goto 31


state 25
	argRule : typeVar IDENT .  (20)

	.  reduce 20


state 26
	methodDecl : '(' argsList ')' . $$5 '{' statementList '}' declList  (13)
	$$5 : .  (12)

	.  reduce 12

	$$5  goto 32


state 27
	argsListComma : ',' . argRule argsListComma  (21)

	IDENT  shift 1
	INT  shift 2
	BOOL  shift 3
	DOUBLE  shift 5
	STRING  shift 6
	.  error

	typeVar  goto 20
	argRule  goto 33


state 28
	argsList : argRule argsListComma .  (18)

	.  reduce 18


state 29
	declarations : ';' $$3 declList .  (8)

	.  reduce 8


state 30
	listNameDecls : IDENT . $$6 nameDecls  (15)
	$$6 : .  (14)

	.  reduce 14

	$$6  goto 34


state 31
	declarations : ',' $$4 listNameDecls . ';' declList  (10)

	';'  shift 35
	.  error


state 32
	methodDecl : '(' argsList ')' $$5 . '{' statementList '}' declList  (13)

	'{'  shift 36
	.  error


state 33
	argsListComma : ',' argRule . argsListComma  (21)
	argsListComma : .  (22)

	','  shift 27
	')'  reduce 22

	argsListComma  goto 37


state 34
	listNameDecls : IDENT $$6 . nameDecls  (15)
	nameDecls : .  (17)

	','  shift 38
	';'  reduce 17

	nameDecls  goto 39


state 35
	declarations : ',' $$4 listNameDecls ';' . declList  (10)
	declList : .  (6)

	IDENT  shift 1
	INT  shift 2
	BOOL  shift 3
	VOID  shift 4
	DOUBLE  shift 5
	STRING  shift 6
	$end  reduce 6

	typeVar  goto 8
	declList  goto 40


state 36
	methodDecl : '(' argsList ')' $$5 '{' . statementList '}' declList  (13)
	statementList : .  (24)

	IDENT  shift 41
	INT  shift 2
	BOOL  shift 3
	DOUBLE  shift 5
	STRING  shift 6
	SWITCH  shift 42
	WHILE  shift 43
	DO  shift 44
	FOR  shift 45
	IF  shift 46
	RETURN  shift 47
	BREAK  shift 48
	CONTINUE  shift 49
	'}'  reduce 24

	typeVar  goto 50
	statementList  goto 51
	statement  goto 52
	scopeFunVarDecls  goto 53
	attribWithExpr  goto 54


state 37
	argsListComma : ',' argRule argsListComma .  (21)

	.  reduce 21


state 38
	nameDecls : ',' . listNameDecls  (16)

	IDENT  shift 30
	.  error

	listNameDecls  goto 55


state 39
	listNameDecls : IDENT $$6 nameDecls .  (15)

	.  reduce 15


state 40
	declarations : ',' $$4 listNameDecls ';' declList .  (10)

	.  reduce 10


state 41
	attribWithExpr : IDENT . ATTRIB expression  (46)
	typeVar : IDENT .  (100)

	ATTRIB  shift 56
	IDENT  reduce 100


state 42
	statement : SWITCH . '(' expression ')' '{' listSwitchCase '}'  (43)

	'('  shift 57
	.  error


state 43
	statement : WHILE . '(' expression $$9 ')' $$10 statementElements  (33)

	'('  shift 58
	.  error


state 44
	statement : DO . $$11 statementElements WHILE '(' expression $$12 ')'  (36)
	$$11 : .  (34)

	.  reduce 34

	$$11  goto 59


state 45
	statement : FOR . '(' scopeForVarDecls ';' expressionForDecls ';' counterForDecls ')' $$8 statementElements  (30)

	'('  shift 60
	.  error


state 46
	statement : IF . '(' expression $$13 ')' elseifStatement  (38)

	'('  shift 61
	.  error


state 47
	statement : RETURN . expression $$7 ';'  (28)

	NUM  shift 62
	IDENT  shift 63
	TRUE  shift 64
	FALSE  shift 65
	NOT  shift 66
	'('  shift 67
	.  error

	expression  goto 68
	validCaseSwitch  goto 69
	expressionWithFun  goto 70


state 48
	statement : BREAK . $$14 ';'  (40)
	$$14 : .  (39)

	.  reduce 39

	$$14  goto 71


state 49
	statement : CONTINUE . $$15 ';'  (42)
	$$15 : .  (41)

	.  reduce 41

	$$15  goto 72


state 50
	scopeFunVarDecls : typeVar . $$16 listScopeFunVar  (58)
	$$16 : .  (57)

	.  reduce 57

	$$16  goto 73


state 51
	methodDecl : '(' argsList ')' $$5 '{' statementList . '}' declList  (13)

	'}'  shift 74
	.  error


state 52
	statementList : statement . statementList  (23)
	statementList : .  (24)

	IDENT  shift 41
	INT  shift 2
	BOOL  shift 3
	DOUBLE  shift 5
	STRING  shift 6
	SWITCH  shift 42
	WHILE  shift 43
	DO  shift 44
	FOR  shift 45
	IF  shift 46
	RETURN  shift 47
	BREAK  shift 48
	CONTINUE  shift 49
	'}'  reduce 24

	typeVar  goto 50
	statementList  goto 75
	statement  goto 52
	scopeFunVarDecls  goto 53
	attribWithExpr  goto 54


state 53
	statement : scopeFunVarDecls . ';'  (25)

	';'  shift 76
	.  error


state 54
	statement : attribWithExpr . ';'  (26)

	';'  shift 77
	.  error


state 55
	nameDecls : ',' listNameDecls .  (16)

	.  reduce 16


state 56
	attribWithExpr : IDENT ATTRIB . expression  (46)

	NUM  shift 62
	IDENT  shift 63
	TRUE  shift 64
	FALSE  shift 65
	NOT  shift 66
	'('  shift 67
	.  error

	expression  goto 78
	validCaseSwitch  goto 69
	expressionWithFun  goto 70


state 57
	statement : SWITCH '(' . expression ')' '{' listSwitchCase '}'  (43)

	NUM  shift 62
	IDENT  shift 63
	TRUE  shift 64
	FALSE  shift 65
	NOT  shift 66
	'('  shift 67
	.  error

	expression  goto 79
	validCaseSwitch  goto 69
	expressionWithFun  goto 70


state 58
	statement : WHILE '(' . expression $$9 ')' $$10 statementElements  (33)

	NUM  shift 62
	IDENT  shift 63
	TRUE  shift 64
	FALSE  shift 65
	NOT  shift 66
	'('  shift 67
	.  error

	expression  goto 80
	validCaseSwitch  goto 69
	expressionWithFun  goto 70


state 59
	statement : DO $$11 . statementElements WHILE '(' expression $$12 ')'  (36)

	IDENT  shift 41
	INT  shift 2
	BOOL  shift 3
	DOUBLE  shift 5
	STRING  shift 6
	SWITCH  shift 42
	WHILE  shift 43
	DO  shift 44
	FOR  shift 45
	IF  shift 46
	RETURN  shift 47
	BREAK  shift 48
	CONTINUE  shift 49
	'{'  shift 81
	.  error

	typeVar  goto 50
	statement  goto 82
	scopeFunVarDecls  goto 53
	attribWithExpr  goto 54
	statementElements  goto 83


state 60
	statement : FOR '(' . scopeForVarDecls ';' expressionForDecls ';' counterForDecls ')' $$8 statementElements  (30)
	scopeForVarDecls : .  (63)

	IDENT  shift 1
	INT  shift 2
	BOOL  shift 3
	DOUBLE  shift 5
	STRING  shift 6
	';'  reduce 63

	typeVar  goto 84
	scopeForVarDecls  goto 85


state 61
	statement : IF '(' . expression $$13 ')' elseifStatement  (38)

	NUM  shift 62
	IDENT  shift 63
	TRUE  shift 64
	FALSE  shift 65
	NOT  shift 66
	'('  shift 67
	.  error

	expression  goto 86
	validCaseSwitch  goto 69
	expressionWithFun  goto 70


state 62
	validCaseSwitch : NUM .  (53)

	.  reduce 53


state 63
	validCaseSwitch : IDENT .  (52)
	expressionWithFun : IDENT . '(' argsSourceList ')'  (75)

	'('  shift 87
	AND  reduce 52
	OR  reduce 52
	DIV  reduce 52
	MOD  reduce 52
	EQ  reduce 52
	NEQ  reduce 52
	LEQ  reduce 52
	GEQ  reduce 52
	'<'  reduce 52
	'>'  reduce 52
	'*'  reduce 52
	'+'  reduce 52
	'-'  reduce 52
	';'  reduce 52
	','  reduce 52
	')'  reduce 52


state 64
	validCaseSwitch : TRUE .  (54)

	.  reduce 54


state 65
	validCaseSwitch : FALSE .  (55)

	.  reduce 55


state 66
	expression : NOT . expression  (92)

	NUM  shift 62
	IDENT  shift 63
	TRUE  shift 64
	FALSE  shift 65
	NOT  shift 66
	'('  shift 67
	.  error

	expression  goto 88
	validCaseSwitch  goto 69
	expressionWithFun  goto 70


state 67
	expression : '(' . expression ')'  (93)

	NUM  shift 62
	IDENT  shift 63
	TRUE  shift 64
	FALSE  shift 65
	NOT  shift 66
	'('  shift 67
	.  error

	expression  goto 89
	validCaseSwitch  goto 69
	expressionWithFun  goto 70


state 68
	statement : RETURN expression . $$7 ';'  (28)
	expression : expression . '+' expression  (79)
	expression : expression . '-' expression  (80)
	expression : expression . '*' expression  (81)
	expression : expression . DIV expression  (82)
	expression : expression . MOD expression  (83)
	expression : expression . OR expression  (84)
	expression : expression . AND expression  (85)
	expression : expression . '<' expression  (86)
	expression : expression . LEQ expression  (87)
	expression : expression . EQ expression  (88)
	expression : expression . GEQ expression  (89)
	expression : expression . '>' expression  (90)
	expression : expression . NEQ expression  (91)
	$$7 : .  (27)

	AND  shift 90
	OR  shift 91
	DIV  shift 92
	MOD  shift 93
	EQ  shift 94
	NEQ  shift 95
	LEQ  shift 96
	GEQ  shift 97
	'<'  shift 98
	'>'  shift 99
	'*'  shift 100
	'+'  shift 101
	'-'  shift 102
	';'  reduce 27

	$$7  goto 103


state 69
	expression : validCaseSwitch .  (95)

	.  reduce 95


state 70
	expression : expressionWithFun .  (94)

	.  reduce 94


state 71
	statement : BREAK $$14 . ';'  (40)

	';'  shift 104
	.  error


state 72
	statement : CONTINUE $$15 . ';'  (42)

	';'  shift 105
	.  error


state 73
	scopeFunVarDecls : typeVar $$16 . listScopeFunVar  (58)

	IDENT  shift 106
	.  error

	attribWithExpr  goto 107
	listScopeFunVar  goto 108


state 74
	methodDecl : '(' argsList ')' $$5 '{' statementList '}' . declList  (13)
	declList : .  (6)

	IDENT  shift 1
	INT  shift 2
	BOOL  shift 3
	VOID  shift 4
	DOUBLE  shift 5
	STRING  shift 6
	$end  reduce 6

	typeVar  goto 8
	declList  goto 109


state 75
	statementList : statement statementList .  (23)

	.  reduce 23


state 76
	statement : scopeFunVarDecls ';' .  (25)

	.  reduce 25


state 77
	statement : attribWithExpr ';' .  (26)

	.  reduce 26


state 78
	attribWithExpr : IDENT ATTRIB expression .  (46)
	expression : expression . '+' expression  (79)
	expression : expression . '-' expression  (80)
	expression : expression . '*' expression  (81)
	expression : expression . DIV expression  (82)
	expression : expression . MOD expression  (83)
	expression : expression . OR expression  (84)
	expression : expression . AND expression  (85)
	expression : expression . '<' expression  (86)
	expression : expression . LEQ expression  (87)
	expression : expression . EQ expression  (88)
	expression : expression . GEQ expression  (89)
	expression : expression . '>' expression  (90)
	expression : expression . NEQ expression  (91)

	AND  shift 90
	OR  shift 91
	DIV  shift 92
	MOD  shift 93
	EQ  shift 94
	NEQ  shift 95
	LEQ  shift 96
	GEQ  shift 97
	'<'  shift 98
	'>'  shift 99
	'*'  shift 100
	'+'  shift 101
	'-'  shift 102
	';'  reduce 46
	','  reduce 46


state 79
	statement : SWITCH '(' expression . ')' '{' listSwitchCase '}'  (43)
	expression : expression . '+' expression  (79)
	expression : expression . '-' expression  (80)
	expression : expression . '*' expression  (81)
	expression : expression . DIV expression  (82)
	expression : expression . MOD expression  (83)
	expression : expression . OR expression  (84)
	expression : expression . AND expression  (85)
	expression : expression . '<' expression  (86)
	expression : expression . LEQ expression  (87)
	expression : expression . EQ expression  (88)
	expression : expression . GEQ expression  (89)
	expression : expression . '>' expression  (90)
	expression : expression . NEQ expression  (91)

	AND  shift 90
	OR  shift 91
	DIV  shift 92
	MOD  shift 93
	EQ  shift 94
	NEQ  shift 95
	LEQ  shift 96
	GEQ  shift 97
	'<'  shift 98
	'>'  shift 99
	'*'  shift 100
	'+'  shift 101
	'-'  shift 102
	')'  shift 110
	.  error


state 80
	statement : WHILE '(' expression . $$9 ')' $$10 statementElements  (33)
	expression : expression . '+' expression  (79)
	expression : expression . '-' expression  (80)
	expression : expression . '*' expression  (81)
	expression : expression . DIV expression  (82)
	expression : expression . MOD expression  (83)
	expression : expression . OR expression  (84)
	expression : expression . AND expression  (85)
	expression : expression . '<' expression  (86)
	expression : expression . LEQ expression  (87)
	expression : expression . EQ expression  (88)
	expression : expression . GEQ expression  (89)
	expression : expression . '>' expression  (90)
	expression : expression . NEQ expression  (91)
	$$9 : .  (31)

	AND  shift 90
	OR  shift 91
	DIV  shift 92
	MOD  shift 93
	EQ  shift 94
	NEQ  shift 95
	LEQ  shift 96
	GEQ  shift 97
	'<'  shift 98
	'>'  shift 99
	'*'  shift 100
	'+'  shift 101
	'-'  shift 102
	')'  reduce 31

	$$9  goto 111


state 81
	statementElements : '{' . statementList '}'  (48)
	statementList : .  (24)

	IDENT  shift 41
	INT  shift 2
	BOOL  shift 3
	DOUBLE  shift 5
	STRING  shift 6
	SWITCH  shift 42
	WHILE  shift 43
	DO  shift 44
	FOR  shift 45
	IF  shift 46
	RETURN  shift 47
	BREAK  shift 48
	CONTINUE  shift 49
	'}'  reduce 24

	typeVar  goto 50
	statementList  goto 112
	statement  goto 52
	scopeFunVarDecls  goto 53
	attribWithExpr  goto 54


state 82
	statementElements : statement .  (47)

	.  reduce 47


state 83
	statement : DO $$11 statementElements . WHILE '(' expression $$12 ')'  (36)

	WHILE  shift 113
	.  error


state 84
	scopeForVarDecls : typeVar . attribScopeForVars  (62)

	IDENT  shift 114
	.  error

	attribScopeForVars  goto 115


state 85
	statement : FOR '(' scopeForVarDecls . ';' expressionForDecls ';' counterForDecls ')' $$8 statementElements  (30)

	';'  shift 116
	.  error


state 86
	statement : IF '(' expression . $$13 ')' elseifStatement  (38)
	expression : expression . '+' expression  (79)
	expression : expression . '-' expression  (80)
	expression : expression . '*' expression  (81)
	expression : expression . DIV expression  (82)
	expression : expression . MOD expression  (83)
	expression : expression . OR expression  (84)
	expression : expression . AND expression  (85)
	expression : expression . '<' expression  (86)
	expression : expression . LEQ expression  (87)
	expression : expression . EQ expression  (88)
	expression : expression . GEQ expression  (89)
	expression : expression . '>' expression  (90)
	expression : expression . NEQ expression  (91)
	$$13 : .  (37)

	AND  shift 90
	OR  shift 91
	DIV  shift 92
	MOD  shift 93
	EQ  shift 94
	NEQ  shift 95
	LEQ  shift 96
	GEQ  shift 97
	'<'  shift 98
	'>'  shift 99
	'*'  shift 100
	'+'  shift 101
	'-'  shift 102
	')'  reduce 37

	$$13  goto 117


state 87
	expressionWithFun : IDENT '(' . argsSourceList ')'  (75)

	NUM  shift 62
	IDENT  shift 63
	TRUE  shift 64
	FALSE  shift 65
	NOT  shift 66
	'('  shift 67
	.  error

	expression  goto 118
	validCaseSwitch  goto 69
	expressionWithFun  goto 70
	argsSourceList  goto 119


state 88
	expression : expression . '+' expression  (79)
	expression : expression . '-' expression  (80)
	expression : expression . '*' expression  (81)
	expression : expression . DIV expression  (82)
	expression : expression . MOD expression  (83)
	expression : expression . OR expression  (84)
	expression : expression . AND expression  (85)
	expression : expression . '<' expression  (86)
	expression : expression . LEQ expression  (87)
	expression : expression . EQ expression  (88)
	expression : expression . GEQ expression  (89)
	expression : expression . '>' expression  (90)
	expression : expression . NEQ expression  (91)
	expression : NOT expression .  (92)

	AND  shift 90
	OR  shift 91
	DIV  shift 92
	MOD  shift 93
	EQ  shift 94
	NEQ  shift 95
	LEQ  shift 96
	GEQ  shift 97
	'<'  shift 98
	'>'  shift 99
	'*'  shift 100
	'+'  shift 101
	'-'  shift 102
	';'  reduce 92
	','  reduce 92
	')'  reduce 92


state 89
	expression : expression . '+' expression  (79)
	expression : expression . '-' expression  (80)
	expression : expression . '*' expression  (81)
	expression : expression . DIV expression  (82)
	expression : expression . MOD expression  (83)
	expression : expression . OR expression  (84)
	expression : expression . AND expression  (85)
	expression : expression . '<' expression  (86)
	expression : expression . LEQ expression  (87)
	expression : expression . EQ expression  (88)
	expression : expression . GEQ expression  (89)
	expression : expression . '>' expression  (90)
	expression : expression . NEQ expression  (91)
	expression : '(' expression . ')'  (93)

	AND  shift 90
	OR  shift 91
	DIV  shift 92
	MOD  shift 93
	EQ  shift 94
	NEQ  shift 95
	LEQ  shift 96
	GEQ  shift 97
	'<'  shift 98
	'>'  shift 99
	'*'  shift 100
	'+'  shift 101
	'-'  shift 102
	')'  shift 120
	.  error


state 90
	expression : expression AND . expression  (85)

	NUM  shift 62
	IDENT  shift 63
	TRUE  shift 64
	FALSE  shift 65
	NOT  shift 66
	'('  shift 67
	.  error

	expression  goto 121
	validCaseSwitch  goto 69
	expressionWithFun  goto 70


state 91
	expression : expression OR . expression  (84)

	NUM  shift 62
	IDENT  shift 63
	TRUE  shift 64
	FALSE  shift 65
	NOT  shift 66
	'('  shift 67
	.  error

	expression  goto 122
	validCaseSwitch  goto 69
	expressionWithFun  goto 70


state 92
	expression : expression DIV . expression  (82)

	NUM  shift 62
	IDENT  shift 63
	TRUE  shift 64
	FALSE  shift 65
	NOT  shift 66
	'('  shift 67
	.  error

	expression  goto 123
	validCaseSwitch  goto 69
	expressionWithFun  goto 70


state 93
	expression : expression MOD . expression  (83)

	NUM  shift 62
	IDENT  shift 63
	TRUE  shift 64
	FALSE  shift 65
	NOT  shift 66
	'('  shift 67
	.  error

	expression  goto 124
	validCaseSwitch  goto 69
	expressionWithFun  goto 70


state 94
	expression : expression EQ . expression  (88)

	NUM  shift 62
	IDENT  shift 63
	TRUE  shift 64
	FALSE  shift 65
	NOT  shift 66
	'('  shift 67
	.  error

	expression  goto 125
	validCaseSwitch  goto 69
	expressionWithFun  goto 70


state 95
	expression : expression NEQ . expression  (91)

	NUM  shift 62
	IDENT  shift 63
	TRUE  shift 64
	FALSE  shift 65
	NOT  shift 66
	'('  shift 67
	.  error

	expression  goto 126
	validCaseSwitch  goto 69
	expressionWithFun  goto 70


state 96
	expression : expression LEQ . expression  (87)

	NUM  shift 62
	IDENT  shift 63
	TRUE  shift 64
	FALSE  shift 65
	NOT  shift 66
	'('  shift 67
	.  error

	expression  goto 127
	validCaseSwitch  goto 69
	expressionWithFun  goto 70


state 97
	expression : expression GEQ . expression  (89)

	NUM  shift 62
	IDENT  shift 63
	TRUE  shift 64
	FALSE  shift 65
	NOT  shift 66
	'('  shift 67
	.  error

	expression  goto 128
	validCaseSwitch  goto 69
	expressionWithFun  goto 70


state 98
	expression : expression '<' . expression  (86)

	NUM  shift 62
	IDENT  shift 63
	TRUE  shift 64
	FALSE  shift 65
	NOT  shift 66
	'('  shift 67
	.  error

	expression  goto 129
	validCaseSwitch  goto 69
	expressionWithFun  goto 70


state 99
	expression : expression '>' . expression  (90)

	NUM  shift 62
	IDENT  shift 63
	TRUE  shift 64
	FALSE  shift 65
	NOT  shift 66
	'('  shift 67
	.  error

	expression  goto 130
	validCaseSwitch  goto 69
	expressionWithFun  goto 70


state 100
	expression : expression '*' . expression  (81)

	NUM  shift 62
	IDENT  shift 63
	TRUE  shift 64
	FALSE  shift 65
	NOT  shift 66
	'('  shift 67
	.  error

	expression  goto 131
	validCaseSwitch  goto 69
	expressionWithFun  goto 70


state 101
	expression : expression '+' . expression  (79)

	NUM  shift 62
	IDENT  shift 63
	TRUE  shift 64
	FALSE  shift 65
	NOT  shift 66
	'('  shift 67
	.  error

	expression  goto 132
	validCaseSwitch  goto 69
	expressionWithFun  goto 70


state 102
	expression : expression '-' . expression  (80)

	NUM  shift 62
	IDENT  shift 63
	TRUE  shift 64
	FALSE  shift 65
	NOT  shift 66
	'('  shift 67
	.  error

	expression  goto 133
	validCaseSwitch  goto 69
	expressionWithFun  goto 70


state 103
	statement : RETURN expression $$7 . ';'  (28)

	';'  shift 134
	.  error


state 104
	statement : BREAK $$14 ';' .  (40)

	.  reduce 40


state 105
	statement : CONTINUE $$15 ';' .  (42)

	.  reduce 42


state 106
	attribWithExpr : IDENT . ATTRIB expression  (46)

	ATTRIB  shift 56
	.  error


state 107
	listScopeFunVar : attribWithExpr . extendListScopeFunVar  (59)
	extendListScopeFunVar : .  (61)

	','  shift 135
	';'  reduce 61

	extendListScopeFunVar  goto 136


state 108
	scopeFunVarDecls : typeVar $$16 listScopeFunVar .  (58)

	.  reduce 58


state 109
	methodDecl : '(' argsList ')' $$5 '{' statementList '}' declList .  (13)

	.  reduce 13


state 110
	statement : SWITCH '(' expression ')' . '{' listSwitchCase '}'  (43)

	'{'  shift 137
	.  error


state 111
	statement : WHILE '(' expression $$9 . ')' $$10 statementElements  (33)

	')'  shift 138
	.  error


state 112
	statementElements : '{' statementList . '}'  (48)

	'}'  shift 139
	.  error


state 113
	statement : DO $$11 statementElements WHILE . '(' expression $$12 ')'  (36)

	'('  shift 140
	.  error


state 114
	attribScopeForVars : IDENT . ATTRIB expression extendScopeForVars  (64)

	ATTRIB  shift 141
	.  error


state 115
	scopeForVarDecls : typeVar attribScopeForVars .  (62)

	.  reduce 62


state 116
	statement : FOR '(' scopeForVarDecls ';' . expressionForDecls ';' counterForDecls ')' $$8 statementElements  (30)
	expressionForDecls : .  (68)

	NUM  shift 62
	IDENT  shift 63
	TRUE  shift 64
	FALSE  shift 65
	NOT  shift 66
	'('  shift 67
	';'  reduce 68

	expression  goto 142
	validCaseSwitch  goto 69
	expressionWithFun  goto 70
	expressionForDecls  goto 143


state 117
	statement : IF '(' expression $$13 . ')' elseifStatement  (38)

	')'  shift 144
	.  error


state 118
	argsSourceList : expression . expressionList  (76)
	expression : expression . '+' expression  (79)
	expression : expression . '-' expression  (80)
	expression : expression . '*' expression  (81)
	expression : expression . DIV expression  (82)
	expression : expression . MOD expression  (83)
	expression : expression . OR expression  (84)
	expression : expression . AND expression  (85)
	expression : expression . '<' expression  (86)
	expression : expression . LEQ expression  (87)
	expression : expression . EQ expression  (88)
	expression : expression . GEQ expression  (89)
	expression : expression . '>' expression  (90)
	expression : expression . NEQ expression  (91)
	expressionList : .  (78)

	AND  shift 90
	OR  shift 91
	DIV  shift 92
	MOD  shift 93
	EQ  shift 94
	NEQ  shift 95
	LEQ  shift 96
	GEQ  shift 97
	'<'  shift 98
	'>'  shift 99
	'*'  shift 100
	'+'  shift 101
	'-'  shift 102
	','  shift 145
	')'  reduce 78

	expressionList  goto 146


state 119
	expressionWithFun : IDENT '(' argsSourceList . ')'  (75)

	')'  shift 147
	.  error


state 120
	expression : '(' expression ')' .  (93)

	.  reduce 93


state 121
	expression : expression . '+' expression  (79)
	expression : expression . '-' expression  (80)
	expression : expression . '*' expression  (81)
	expression : expression . DIV expression  (82)
	expression : expression . MOD expression  (83)
	expression : expression . OR expression  (84)
	expression : expression . AND expression  (85)
	expression : expression AND expression .  (85)
	expression : expression . '<' expression  (86)
	expression : expression . LEQ expression  (87)
	expression : expression . EQ expression  (88)
	expression : expression . GEQ expression  (89)
	expression : expression . '>' expression  (90)
	expression : expression . NEQ expression  (91)

	.  reduce 85


state 122
	expression : expression . '+' expression  (79)
	expression : expression . '-' expression  (80)
	expression : expression . '*' expression  (81)
	expression : expression . DIV expression  (82)
	expression : expression . MOD expression  (83)
	expression : expression . OR expression  (84)
	expression : expression OR expression .  (84)
	expression : expression . AND expression  (85)
	expression : expression . '<' expression  (86)
	expression : expression . LEQ expression  (87)
	expression : expression . EQ expression  (88)
	expression : expression . GEQ expression  (89)
	expression : expression . '>' expression  (90)
	expression : expression . NEQ expression  (91)

	.  reduce 84


state 123
	expression : expression . '+' expression  (79)
	expression : expression . '-' expression  (80)
	expression : expression . '*' expression  (81)
	expression : expression . DIV expression  (82)
	expression : expression DIV expression .  (82)
	expression : expression . MOD expression  (83)
	expression : expression . OR expression  (84)
	expression : expression . AND expression  (85)
	expression : expression . '<' expression  (86)
	expression : expression . LEQ expression  (87)
	expression : expression . EQ expression  (88)
	expression : expression . GEQ expression  (89)
	expression : expression . '>' expression  (90)
	expression : expression . NEQ expression  (91)

	AND  shift 90
	OR  shift 91
	'+'  shift 101
	'-'  shift 102
	DIV  reduce 82
	MOD  reduce 82
	EQ  reduce 82
	NEQ  reduce 82
	LEQ  reduce 82
	GEQ  reduce 82
	'<'  reduce 82
	'>'  reduce 82
	'*'  reduce 82
	';'  reduce 82
	','  reduce 82
	')'  reduce 82


state 124
	expression : expression . '+' expression  (79)
	expression : expression . '-' expression  (80)
	expression : expression . '*' expression  (81)
	expression : expression . DIV expression  (82)
	expression : expression . MOD expression  (83)
	expression : expression MOD expression .  (83)
	expression : expression . OR expression  (84)
	expression : expression . AND expression  (85)
	expression : expression . '<' expression  (86)
	expression : expression . LEQ expression  (87)
	expression : expression . EQ expression  (88)
	expression : expression . GEQ expression  (89)
	expression : expression . '>' expression  (90)
	expression : expression . NEQ expression  (91)

	AND  shift 90
	OR  shift 91
	'+'  shift 101
	'-'  shift 102
	DIV  reduce 83
	MOD  reduce 83
	EQ  reduce 83
	NEQ  reduce 83
	LEQ  reduce 83
	GEQ  reduce 83
	'<'  reduce 83
	'>'  reduce 83
	'*'  reduce 83
	';'  reduce 83
	','  reduce 83
	')'  reduce 83


state 125
	expression : expression . '+' expression  (79)
	expression : expression . '-' expression  (80)
	expression : expression . '*' expression  (81)
	expression : expression . DIV expression  (82)
	expression : expression . MOD expression  (83)
	expression : expression . OR expression  (84)
	expression : expression . AND expression  (85)
	expression : expression . '<' expression  (86)
	expression : expression . LEQ expression  (87)
	expression : expression . EQ expression  (88)
	expression : expression EQ expression .  (88)
	expression : expression . GEQ expression  (89)
	expression : expression . '>' expression  (90)
	expression : expression . NEQ expression  (91)

	AND  shift 90
	OR  shift 91
	DIV  shift 92
	MOD  shift 93
	'*'  shift 100
	'+'  shift 101
	'-'  shift 102
	';'  reduce 88
	','  reduce 88
	')'  reduce 88


state 126
	expression : expression . '+' expression  (79)
	expression : expression . '-' expression  (80)
	expression : expression . '*' expression  (81)
	expression : expression . DIV expression  (82)
	expression : expression . MOD expression  (83)
	expression : expression . OR expression  (84)
	expression : expression . AND expression  (85)
	expression : expression . '<' expression  (86)
	expression : expression . LEQ expression  (87)
	expression : expression . EQ expression  (88)
	expression : expression . GEQ expression  (89)
	expression : expression . '>' expression  (90)
	expression : expression . NEQ expression  (91)
	expression : expression NEQ expression .  (91)

	AND  shift 90
	OR  shift 91
	DIV  shift 92
	MOD  shift 93
	'*'  shift 100
	'+'  shift 101
	'-'  shift 102
	';'  reduce 91
	','  reduce 91
	')'  reduce 91


state 127
	expression : expression . '+' expression  (79)
	expression : expression . '-' expression  (80)
	expression : expression . '*' expression  (81)
	expression : expression . DIV expression  (82)
	expression : expression . MOD expression  (83)
	expression : expression . OR expression  (84)
	expression : expression . AND expression  (85)
	expression : expression . '<' expression  (86)
	expression : expression . LEQ expression  (87)
	expression : expression LEQ expression .  (87)
	expression : expression . EQ expression  (88)
	expression : expression . GEQ expression  (89)
	expression : expression . '>' expression  (90)
	expression : expression . NEQ expression  (91)

	AND  shift 90
	OR  shift 91
	DIV  shift 92
	MOD  shift 93
	'*'  shift 100
	'+'  shift 101
	'-'  shift 102
	';'  reduce 87
	','  reduce 87
	')'  reduce 87


state 128
	expression : expression . '+' expression  (79)
	expression : expression . '-' expression  (80)
	expression : expression . '*' expression  (81)
	expression : expression . DIV expression  (82)
	expression : expression . MOD expression  (83)
	expression : expression . OR expression  (84)
	expression : expression . AND expression  (85)
	expression : expression . '<' expression  (86)
	expression : expression . LEQ expression  (87)
	expression : expression . EQ expression  (88)
	expression : expression . GEQ expression  (89)
	expression : expression GEQ expression .  (89)
	expression : expression . '>' expression  (90)
	expression : expression . NEQ expression  (91)

	AND  shift 90
	OR  shift 91
	DIV  shift 92
	MOD  shift 93
	'*'  shift 100
	'+'  shift 101
	'-'  shift 102
	';'  reduce 89
	','  reduce 89
	')'  reduce 89


state 129
	expression : expression . '+' expression  (79)
	expression : expression . '-' expression  (80)
	expression : expression . '*' expression  (81)
	expression : expression . DIV expression  (82)
	expression : expression . MOD expression  (83)
	expression : expression . OR expression  (84)
	expression : expression . AND expression  (85)
	expression : expression . '<' expression  (86)
	expression : expression '<' expression .  (86)
	expression : expression . LEQ expression  (87)
	expression : expression . EQ expression  (88)
	expression : expression . GEQ expression  (89)
	expression : expression . '>' expression  (90)
	expression : expression . NEQ expression  (91)

	AND  shift 90
	OR  shift 91
	DIV  shift 92
	MOD  shift 93
	'*'  shift 100
	'+'  shift 101
	'-'  shift 102
	';'  reduce 86
	','  reduce 86
	')'  reduce 86


state 130
	expression : expression . '+' expression  (79)
	expression : expression . '-' expression  (80)
	expression : expression . '*' expression  (81)
	expression : expression . DIV expression  (82)
	expression : expression . MOD expression  (83)
	expression : expression . OR expression  (84)
	expression : expression . AND expression  (85)
	expression : expression . '<' expression  (86)
	expression : expression . LEQ expression  (87)
	expression : expression . EQ expression  (88)
	expression : expression . GEQ expression  (89)
	expression : expression . '>' expression  (90)
	expression : expression '>' expression .  (90)
	expression : expression . NEQ expression  (91)

	AND  shift 90
	OR  shift 91
	DIV  shift 92
	MOD  shift 93
	'*'  shift 100
	'+'  shift 101
	'-'  shift 102
	';'  reduce 90
	','  reduce 90
	')'  reduce 90


state 131
	expression : expression . '+' expression  (79)
	expression : expression . '-' expression  (80)
	expression : expression . '*' expression  (81)
	expression : expression '*' expression .  (81)
	expression : expression . DIV expression  (82)
	expression : expression . MOD expression  (83)
	expression : expression . OR expression  (84)
	expression : expression . AND expression  (85)
	expression : expression . '<' expression  (86)
	expression : expression . LEQ expression  (87)
	expression : expression . EQ expression  (88)
	expression : expression . GEQ expression  (89)
	expression : expression . '>' expression  (90)
	expression : expression . NEQ expression  (91)

	AND  shift 90
	OR  shift 91
	'+'  shift 101
	'-'  shift 102
	DIV  reduce 81
	MOD  reduce 81
	EQ  reduce 81
	NEQ  reduce 81
	LEQ  reduce 81
	GEQ  reduce 81
	'<'  reduce 81
	'>'  reduce 81
	'*'  reduce 81
	';'  reduce 81
	','  reduce 81
	')'  reduce 81


state 132
	expression : expression . '+' expression  (79)
	expression : expression '+' expression .  (79)
	expression : expression . '-' expression  (80)
	expression : expression . '*' expression  (81)
	expression : expression . DIV expression  (82)
	expression : expression . MOD expression  (83)
	expression : expression . OR expression  (84)
	expression : expression . AND expression  (85)
	expression : expression . '<' expression  (86)
	expression : expression . LEQ expression  (87)
	expression : expression . EQ expression  (88)
	expression : expression . GEQ expression  (89)
	expression : expression . '>' expression  (90)
	expression : expression . NEQ expression  (91)

	AND  shift 90
	OR  shift 91
	DIV  reduce 79
	MOD  reduce 79
	EQ  reduce 79
	NEQ  reduce 79
	LEQ  reduce 79
	GEQ  reduce 79
	'<'  reduce 79
	'>'  reduce 79
	'*'  reduce 79
	'+'  reduce 79
	'-'  reduce 79
	';'  reduce 79
	','  reduce 79
	')'  reduce 79


state 133
	expression : expression . '+' expression  (79)
	expression : expression . '-' expression  (80)
	expression : expression '-' expression .  (80)
	expression : expression . '*' expression  (81)
	expression : expression . DIV expression  (82)
	expression : expression . MOD expression  (83)
	expression : expression . OR expression  (84)
	expression : expression . AND expression  (85)
	expression : expression . '<' expression  (86)
	expression : expression . LEQ expression  (87)
	expression : expression . EQ expression  (88)
	expression : expression . GEQ expression  (89)
	expression : expression . '>' expression  (90)
	expression : expression . NEQ expression  (91)

	AND  shift 90
	OR  shift 91
	DIV  reduce 80
	MOD  reduce 80
	EQ  reduce 80
	NEQ  reduce 80
	LEQ  reduce 80
	GEQ  reduce 80
	'<'  reduce 80
	'>'  reduce 80
	'*'  reduce 80
	'+'  reduce 80
	'-'  reduce 80
	';'  reduce 80
	','  reduce 80
	')'  reduce 80


state 134
	statement : RETURN expression $$7 ';' .  (28)

	.  reduce 28


state 135
	extendListScopeFunVar : ',' . listScopeFunVar  (60)

	IDENT  shift 106
	.  error

	attribWithExpr  goto 107
	listScopeFunVar  goto 148


state 136
	listScopeFunVar : attribWithExpr extendListScopeFunVar .  (59)

	.  reduce 59


state 137
	statement : SWITCH '(' expression ')' '{' . listSwitchCase '}'  (43)
	listSwitchCase : .  (51)

	CASE  shift 149
	DEFAULT  shift 150
	'}'  reduce 51

	listSwitchCase  goto 151


state 138
	statement : WHILE '(' expression $$9 ')' . $$10 statementElements  (33)
	$$10 : .  (32)

	.  reduce 32

	$$10  goto 152


state 139
	statementElements : '{' statementList '}' .  (48)

	.  reduce 48


state 140
	statement : DO $$11 statementElements WHILE '(' . expression $$12 ')'  (36)

	NUM  shift 62
	IDENT  shift 63
	TRUE  shift 64
	FALSE  shift 65
	NOT  shift 66
	'('  shift 67
	.  error

	expression  goto 153
	validCaseSwitch  goto 69
	expressionWithFun  goto 70


state 141
	attribScopeForVars : IDENT ATTRIB . expression extendScopeForVars  (64)

	NUM  shift 62
	IDENT  shift 63
	TRUE  shift 64
	FALSE  shift 65
	NOT  shift 66
	'('  shift 67
	.  error

	expression  goto 154
	validCaseSwitch  goto 69
	expressionWithFun  goto 70


state 142
	expressionForDecls : expression .  (67)
	expression : expression . '+' expression  (79)
	expression : expression . '-' expression  (80)
	expression : expression . '*' expression  (81)
	expression : expression . DIV expression  (82)
	expression : expression . MOD expression  (83)
	expression : expression . OR expression  (84)
	expression : expression . AND expression  (85)
	expression : expression . '<' expression  (86)
	expression : expression . LEQ expression  (87)
	expression : expression . EQ expression  (88)
	expression : expression . GEQ expression  (89)
	expression : expression . '>' expression  (90)
	expression : expression . NEQ expression  (91)

	AND  shift 90
	OR  shift 91
	DIV  shift 92
	MOD  shift 93
	EQ  shift 94
	NEQ  shift 95
	LEQ  shift 96
	GEQ  shift 97
	'<'  shift 98
	'>'  shift 99
	'*'  shift 100
	'+'  shift 101
	'-'  shift 102
	';'  reduce 67


state 143
	statement : FOR '(' scopeForVarDecls ';' expressionForDecls . ';' counterForDecls ')' $$8 statementElements  (30)

	';'  shift 155
	.  error


state 144
	statement : IF '(' expression $$13 ')' . elseifStatement  (38)
	elseifStatement : .  (45)

	ELSE  shift 156
	IDENT  reduce 45
	INT  reduce 45
	BOOL  reduce 45
	DOUBLE  reduce 45
	STRING  reduce 45
	SWITCH  reduce 45
	CASE  reduce 45
	DEFAULT  reduce 45
	WHILE  reduce 45
	DO  reduce 45
	FOR  reduce 45
	IF  reduce 45
	RETURN  reduce 45
	BREAK  reduce 45
	CONTINUE  reduce 45
	'}'  reduce 45

	elseifStatement  goto 157


state 145
	expressionList : ',' . argsSourceList  (77)

	NUM  shift 62
	IDENT  shift 63
	TRUE  shift 64
	FALSE  shift 65
	NOT  shift 66
	'('  shift 67
	.  error

	expression  goto 118
	validCaseSwitch  goto 69
	expressionWithFun  goto 70
	argsSourceList  goto 158


state 146
	argsSourceList : expression expressionList .  (76)

	.  reduce 76


state 147
	expressionWithFun : IDENT '(' argsSourceList ')' .  (75)

	.  reduce 75


state 148
	extendListScopeFunVar : ',' listScopeFunVar .  (60)

	.  reduce 60


state 149
	listSwitchCase : CASE . validCaseSwitch statementSwitchCase  (49)

	NUM  shift 62
	IDENT  shift 159
	TRUE  shift 64
	FALSE  shift 65
	.  error

	validCaseSwitch  goto 160


state 150
	listSwitchCase : DEFAULT . statementSwitchCase  (50)

	':'  shift 161
	.  error

	statementSwitchCase  goto 162


state 151
	statement : SWITCH '(' expression ')' '{' listSwitchCase . '}'  (43)

	'}'  shift 163
	.  error


state 152
	statement : WHILE '(' expression $$9 ')' $$10 . statementElements  (33)

	IDENT  shift 41
	INT  shift 2
	BOOL  shift 3
	DOUBLE  shift 5
	STRING  shift 6
	SWITCH  shift 42
	WHILE  shift 43
	DO  shift 44
	FOR  shift 45
	IF  shift 46
	RETURN  shift 47
	BREAK  shift 48
	CONTINUE  shift 49
	'{'  shift 81
	.  error

	typeVar  goto 50
	statement  goto 82
	scopeFunVarDecls  goto 53
	attribWithExpr  goto 54
	statementElements  goto 164


state 153
	statement : DO $$11 statementElements WHILE '(' expression . $$12 ')'  (36)
	expression : expression . '+' expression  (79)
	expression : expression . '-' expression  (80)
	expression : expression . '*' expression  (81)
	expression : expression . DIV expression  (82)
	expression : expression . MOD expression  (83)
	expression : expression . OR expression  (84)
	expression : expression . AND expression  (85)
	expression : expression . '<' expression  (86)
	expression : expression . LEQ expression  (87)
	expression : expression . EQ expression  (88)
	expression : expression . GEQ expression  (89)
	expression : expression . '>' expression  (90)
	expression : expression . NEQ expression  (91)
	$$12 : .  (35)

	AND  shift 90
	OR  shift 91
	DIV  shift 92
	MOD  shift 93
	EQ  shift 94
	NEQ  shift 95
	LEQ  shift 96
	GEQ  shift 97
	'<'  shift 98
	'>'  shift 99
	'*'  shift 100
	'+'  shift 101
	'-'  shift 102
	')'  reduce 35

	$$12  goto 165


state 154
	attribScopeForVars : IDENT ATTRIB expression . extendScopeForVars  (64)
	expression : expression . '+' expression  (79)
	expression : expression . '-' expression  (80)
	expression : expression . '*' expression  (81)
	expression : expression . DIV expression  (82)
	expression : expression . MOD expression  (83)
	expression : expression . OR expression  (84)
	expression : expression . AND expression  (85)
	expression : expression . '<' expression  (86)
	expression : expression . LEQ expression  (87)
	expression : expression . EQ expression  (88)
	expression : expression . GEQ expression  (89)
	expression : expression . '>' expression  (90)
	expression : expression . NEQ expression  (91)
	extendScopeForVars : .  (66)

	AND  shift 90
	OR  shift 91
	DIV  shift 92
	MOD  shift 93
	EQ  shift 94
	NEQ  shift 95
	LEQ  shift 96
	GEQ  shift 97
	'<'  shift 98
	'>'  shift 99
	'*'  shift 100
	'+'  shift 101
	'-'  shift 102
	','  shift 166
	';'  reduce 66

	extendScopeForVars  goto 167


state 155
	statement : FOR '(' scopeForVarDecls ';' expressionForDecls ';' . counterForDecls ')' $$8 statementElements  (30)
	counterForDecls : .  (70)

	IDENT  shift 168
	')'  reduce 70

	counterForDecls  goto 169


state 156
	elseifStatement : ELSE . statementElements  (44)

	IDENT  shift 41
	INT  shift 2
	BOOL  shift 3
	DOUBLE  shift 5
	STRING  shift 6
	SWITCH  shift 42
	WHILE  shift 43
	DO  shift 44
	FOR  shift 45
	IF  shift 46
	RETURN  shift 47
	BREAK  shift 48
	CONTINUE  shift 49
	'{'  shift 81
	.  error

	typeVar  goto 50
	statement  goto 82
	scopeFunVarDecls  goto 53
	attribWithExpr  goto 54
	statementElements  goto 170


state 157
	statement : IF '(' expression $$13 ')' elseifStatement .  (38)

	.  reduce 38


state 158
	expressionList : ',' argsSourceList .  (77)

	.  reduce 77


state 159
	validCaseSwitch : IDENT .  (52)

	.  reduce 52


state 160
	listSwitchCase : CASE validCaseSwitch . statementSwitchCase  (49)

	':'  shift 161
	.  error

	statementSwitchCase  goto 171


state 161
	statementSwitchCase : ':' . statementElements listSwitchCase  (56)

	IDENT  shift 41
	INT  shift 2
	BOOL  shift 3
	DOUBLE  shift 5
	STRING  shift 6
	SWITCH  shift 42
	WHILE  shift 43
	DO  shift 44
	FOR  shift 45
	IF  shift 46
	RETURN  shift 47
	BREAK  shift 48
	CONTINUE  shift 49
	'{'  shift 81
	.  error

	typeVar  goto 50
	statement  goto 82
	scopeFunVarDecls  goto 53
	attribWithExpr  goto 54
	statementElements  goto 172


state 162
	listSwitchCase : DEFAULT statementSwitchCase .  (50)

	.  reduce 50


state 163
	statement : SWITCH '(' expression ')' '{' listSwitchCase '}' .  (43)

	.  reduce 43


state 164
	statement : WHILE '(' expression $$9 ')' $$10 statementElements .  (33)

	.  reduce 33


state 165
	statement : DO $$11 statementElements WHILE '(' expression $$12 . ')'  (36)

	')'  shift 173
	.  error


state 166
	extendScopeForVars : ',' . attribScopeForVars  (65)

	IDENT  shift 114
	.  error

	attribScopeForVars  goto 174


state 167
	attribScopeForVars : IDENT ATTRIB expression extendScopeForVars .  (64)

	.  reduce 64


state 168
	counterForDecls : IDENT . operatorIncr listCounterForDecls  (69)

	INCREMENT  shift 175
	DECREMENT  shift 176
	.  error

	operatorIncr  goto 177


state 169
	statement : FOR '(' scopeForVarDecls ';' expressionForDecls ';' counterForDecls . ')' $$8 statementElements  (30)

	')'  shift 178
	.  error


state 170
	elseifStatement : ELSE statementElements .  (44)

	.  reduce 44


state 171
	listSwitchCase : CASE validCaseSwitch statementSwitchCase .  (49)

	.  reduce 49


state 172
	statementSwitchCase : ':' statementElements . listSwitchCase  (56)
	listSwitchCase : .  (51)

	CASE  shift 149
	DEFAULT  shift 150
	'}'  reduce 51

	listSwitchCase  goto 179


state 173
	statement : DO $$11 statementElements WHILE '(' expression $$12 ')' .  (36)

	.  reduce 36


state 174
	extendScopeForVars : ',' attribScopeForVars .  (65)

	.  reduce 65


state 175
	operatorIncr : INCREMENT .  (73)

	.  reduce 73


state 176
	operatorIncr : DECREMENT .  (74)

	.  reduce 74


state 177
	counterForDecls : IDENT operatorIncr . listCounterForDecls  (69)
	listCounterForDecls : .  (72)

	','  shift 180
	')'  reduce 72

	listCounterForDecls  goto 181


state 178
	statement : FOR '(' scopeForVarDecls ';' expressionForDecls ';' counterForDecls ')' . $$8 statementElements  (30)
	$$8 : .  (29)

	.  reduce 29

	$$8  goto 182


state 179
	statementSwitchCase : ':' statementElements listSwitchCase .  (56)

	.  reduce 56


state 180
	listCounterForDecls : ',' . counterForDecls  (71)
	counterForDecls : .  (70)

	IDENT  shift 168
	')'  reduce 70

	counterForDecls  goto 183


state 181
	counterForDecls : IDENT operatorIncr listCounterForDecls .  (69)

	.  reduce 69


state 182
	statement : FOR '(' scopeForVarDecls ';' expressionForDecls ';' counterForDecls ')' $$8 . statementElements  (30)

	IDENT  shift 41
	INT  shift 2
	BOOL  shift 3
	DOUBLE  shift 5
	STRING  shift 6
	SWITCH  shift 42
	WHILE  shift 43
	DO  shift 44
	FOR  shift 45
	IF  shift 46
	RETURN  shift 47
	BREAK  shift 48
	CONTINUE  shift 49
	'{'  shift 81
	.  error

	typeVar  goto 50
	statement  goto 82
	scopeFunVarDecls  goto 53
	attribWithExpr  goto 54
	statementElements  goto 184


state 183
	listCounterForDecls : ',' counterForDecls .  (71)

	.  reduce 71


state 184
	statement : FOR '(' scopeForVarDecls ';' expressionForDecls ';' counterForDecls ')' $$8 statementElements .  (30)

	.  reduce 30


47 terminals, 49 nonterminals
101 grammar rules, 185 states
