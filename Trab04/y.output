   0  $accept : program $end

   1  $$1 :

   2  program : $$1 declList

   3  $$2 :

   4  declList : typeVar IDENT $$2 declarations

   5  $$3 :

   6  declList : VOID IDENT $$3 methodDecl
   7           |

   8  $$4 :

   9  declarations : ';' $$4 declList

  10  $$5 :

  11  declarations : ',' $$5 listNameDecls ';' declList
  12               | methodDecl

  13  $$6 :

  14  methodDecl : '(' $$6 argsList ')' '{' statementList '}' declList

  15  $$7 :

  16  listNameDecls : IDENT $$7 nameDecls

  17  nameDecls : ',' listNameDecls
  18            |

  19  argsList : argRule argsListComma
  20           |

  21  argRule : typeVar IDENT

  22  argsListComma : ',' argRule argsListComma
  23                |

  24  statementList : statement statementList
  25                |

  26  statement : scopeFunVarDecls ';'
  27            | attribWithExpr ';'

  28  $$8 :

  29  statement : RETURN expression $$8 ';'

  30  $$9 :

  31  $$10 :

  32  statement : FOR '(' $$9 scopeForVarDecls ';' expressionForDecls ';' counterForDecls ')' $$10 statementElements

  33  $$11 :

  34  $$12 :

  35  $$13 :

  36  statement : WHILE $$11 '(' expression $$12 ')' $$13 statementElements

  37  $$14 :

  38  $$15 :

  39  $$16 :

  40  statement : DO $$14 $$15 statementElements WHILE '(' expression $$16 ')'

  41  $$17 :

  42  statement : IF '(' expression $$17 ')' statementElements elseifStatement

  43  $$18 :

  44  statement : BREAK $$18 ';'

  45  $$19 :

  46  statement : CONTINUE $$19 ';'
  47            | SWITCH '(' expression ')' '{' listSwitchCase '}'

  48  $$20 :

  49  scopeForVarDecls : typeVar $$20 attribScopeForVars
  50                   |

  51  $$21 :

  52  attribScopeForVars : IDENT ATTRIB expression $$21 extendScopeForVars

  53  extendScopeForVars : ',' attribScopeForVars
  54                     |

  55  elseifStatement : ELSE statementElements
  56                  |

  57  attribWithExpr : IDENT ATTRIB expression

  58  statementElements : statement
  59                    | '{' statementList '}'

  60  listSwitchCase : CASE validCaseSwitch statementSwitchCase
  61                 | DEFAULT statementSwitchCase
  62                 |

  63  validCaseSwitch : IDENT
  64                  | NUM
  65                  | TRUE
  66                  | FALSE

  67  statementSwitchCase : ':' statementElements listSwitchCase

  68  $$22 :

  69  scopeFunVarDecls : typeVar $$22 listScopeFunVar

  70  listScopeFunVar : attribWithExpr extendListScopeFunVar

  71  extendListScopeFunVar : ',' listScopeFunVar
  72                        |

  73  expressionForDecls : expression
  74                     |

  75  counterForDecls : IDENT operatorIncr listCounterForDecls
  76                  |

  77  listCounterForDecls : ',' counterForDecls
  78                      |

  79  operatorIncr : INCREMENT
  80               | DECREMENT

  81  expressionWithFun : IDENT '(' argsSourceList ')'

  82  argsSourceList : expression expressionList

  83  expressionList : ',' argsSourceList
  84                 |

  85  expression : expression '+' expression
  86             | expression '-' expression
  87             | expression '*' expression
  88             | expression DIV expression
  89             | expression MOD expression
  90             | expression OR expression
  91             | expression AND expression
  92             | expression '<' expression
  93             | expression LEQ expression
  94             | expression EQ expression
  95             | expression GEQ expression
  96             | expression '>' expression
  97             | expression NEQ expression
  98             | NOT expression
  99             | '(' expression ')'
 100             | expressionWithFun
 101             | validCaseSwitch

 102  typeVar : DOUBLE
 103          | BOOL
 104          | INT
 105          | STRING
 106          | IDENT

state 0
	$accept : . program $end  (0)
	$$1 : .  (1)

	.  reduce 1

	program  goto 1
	$$1  goto 2


state 1
	$accept : program . $end  (0)

	$end  accept


state 2
	program : $$1 . declList  (2)
	declList : .  (7)

	IDENT  shift 3
	INT  shift 4
	BOOL  shift 5
	VOID  shift 6
	DOUBLE  shift 7
	STRING  shift 8
	$end  reduce 7

	typeVar  goto 9
	declList  goto 10


state 3
	typeVar : IDENT .  (106)

	.  reduce 106


state 4
	typeVar : INT .  (104)

	.  reduce 104


state 5
	typeVar : BOOL .  (103)

	.  reduce 103


state 6
	declList : VOID . IDENT $$3 methodDecl  (6)

	IDENT  shift 11
	.  error


state 7
	typeVar : DOUBLE .  (102)

	.  reduce 102


state 8
	typeVar : STRING .  (105)

	.  reduce 105


state 9
	declList : typeVar . IDENT $$2 declarations  (4)

	IDENT  shift 12
	.  error


state 10
	program : $$1 declList .  (2)

	.  reduce 2


state 11
	declList : VOID IDENT . $$3 methodDecl  (6)
	$$3 : .  (5)

	.  reduce 5

	$$3  goto 13


state 12
	declList : typeVar IDENT . $$2 declarations  (4)
	$$2 : .  (3)

	.  reduce 3

	$$2  goto 14


state 13
	declList : VOID IDENT $$3 . methodDecl  (6)

	'('  shift 15
	.  error

	methodDecl  goto 16


state 14
	declList : typeVar IDENT $$2 . declarations  (4)

	'('  shift 15
	';'  shift 17
	','  shift 18
	.  error

	declarations  goto 19
	methodDecl  goto 20


state 15
	methodDecl : '(' . $$6 argsList ')' '{' statementList '}' declList  (14)
	$$6 : .  (13)

	.  reduce 13

	$$6  goto 21


state 16
	declList : VOID IDENT $$3 methodDecl .  (6)

	.  reduce 6


state 17
	declarations : ';' . $$4 declList  (9)
	$$4 : .  (8)

	.  reduce 8

	$$4  goto 22


state 18
	declarations : ',' . $$5 listNameDecls ';' declList  (11)
	$$5 : .  (10)

	.  reduce 10

	$$5  goto 23


state 19
	declList : typeVar IDENT $$2 declarations .  (4)

	.  reduce 4


state 20
	declarations : methodDecl .  (12)

	.  reduce 12


state 21
	methodDecl : '(' $$6 . argsList ')' '{' statementList '}' declList  (14)
	argsList : .  (20)

	IDENT  shift 3
	INT  shift 4
	BOOL  shift 5
	DOUBLE  shift 7
	STRING  shift 8
	')'  reduce 20

	typeVar  goto 24
	argsList  goto 25
	argRule  goto 26


state 22
	declarations : ';' $$4 . declList  (9)
	declList : .  (7)

	IDENT  shift 3
	INT  shift 4
	BOOL  shift 5
	VOID  shift 6
	DOUBLE  shift 7
	STRING  shift 8
	$end  reduce 7

	typeVar  goto 9
	declList  goto 27


state 23
	declarations : ',' $$5 . listNameDecls ';' declList  (11)

	IDENT  shift 28
	.  error

	listNameDecls  goto 29


state 24
	argRule : typeVar . IDENT  (21)

	IDENT  shift 30
	.  error


state 25
	methodDecl : '(' $$6 argsList . ')' '{' statementList '}' declList  (14)

	')'  shift 31
	.  error


state 26
	argsList : argRule . argsListComma  (19)
	argsListComma : .  (23)

	','  shift 32
	')'  reduce 23

	argsListComma  goto 33


state 27
	declarations : ';' $$4 declList .  (9)

	.  reduce 9


state 28
	listNameDecls : IDENT . $$7 nameDecls  (16)
	$$7 : .  (15)

	.  reduce 15

	$$7  goto 34


state 29
	declarations : ',' $$5 listNameDecls . ';' declList  (11)

	';'  shift 35
	.  error


state 30
	argRule : typeVar IDENT .  (21)

	.  reduce 21


state 31
	methodDecl : '(' $$6 argsList ')' . '{' statementList '}' declList  (14)

	'{'  shift 36
	.  error


state 32
	argsListComma : ',' . argRule argsListComma  (22)

	IDENT  shift 3
	INT  shift 4
	BOOL  shift 5
	DOUBLE  shift 7
	STRING  shift 8
	.  error

	typeVar  goto 24
	argRule  goto 37


state 33
	argsList : argRule argsListComma .  (19)

	.  reduce 19


state 34
	listNameDecls : IDENT $$7 . nameDecls  (16)
	nameDecls : .  (18)

	','  shift 38
	';'  reduce 18

	nameDecls  goto 39


state 35
	declarations : ',' $$5 listNameDecls ';' . declList  (11)
	declList : .  (7)

	IDENT  shift 3
	INT  shift 4
	BOOL  shift 5
	VOID  shift 6
	DOUBLE  shift 7
	STRING  shift 8
	$end  reduce 7

	typeVar  goto 9
	declList  goto 40


state 36
	methodDecl : '(' $$6 argsList ')' '{' . statementList '}' declList  (14)
	statementList : .  (25)

	IDENT  shift 41
	INT  shift 4
	BOOL  shift 5
	DOUBLE  shift 7
	STRING  shift 8
	SWITCH  shift 42
	WHILE  shift 43
	DO  shift 44
	FOR  shift 45
	IF  shift 46
	RETURN  shift 47
	BREAK  shift 48
	CONTINUE  shift 49
	'}'  reduce 25

	typeVar  goto 50
	statementList  goto 51
	statement  goto 52
	scopeFunVarDecls  goto 53
	attribWithExpr  goto 54


state 37
	argsListComma : ',' argRule . argsListComma  (22)
	argsListComma : .  (23)

	','  shift 32
	')'  reduce 23

	argsListComma  goto 55


state 38
	nameDecls : ',' . listNameDecls  (17)

	IDENT  shift 28
	.  error

	listNameDecls  goto 56


state 39
	listNameDecls : IDENT $$7 nameDecls .  (16)

	.  reduce 16


state 40
	declarations : ',' $$5 listNameDecls ';' declList .  (11)

	.  reduce 11


state 41
	attribWithExpr : IDENT . ATTRIB expression  (57)
	typeVar : IDENT .  (106)

	ATTRIB  shift 57
	IDENT  reduce 106


state 42
	statement : SWITCH . '(' expression ')' '{' listSwitchCase '}'  (47)

	'('  shift 58
	.  error


state 43
	statement : WHILE . $$11 '(' expression $$12 ')' $$13 statementElements  (36)
	$$11 : .  (33)

	.  reduce 33

	$$11  goto 59


state 44
	statement : DO . $$14 $$15 statementElements WHILE '(' expression $$16 ')'  (40)
	$$14 : .  (37)

	.  reduce 37

	$$14  goto 60


state 45
	statement : FOR . '(' $$9 scopeForVarDecls ';' expressionForDecls ';' counterForDecls ')' $$10 statementElements  (32)

	'('  shift 61
	.  error


state 46
	statement : IF . '(' expression $$17 ')' statementElements elseifStatement  (42)

	'('  shift 62
	.  error


state 47
	statement : RETURN . expression $$8 ';'  (29)

	NUM  shift 63
	IDENT  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NOT  shift 67
	'('  shift 68
	.  error

	expression  goto 69
	validCaseSwitch  goto 70
	expressionWithFun  goto 71


state 48
	statement : BREAK . $$18 ';'  (44)
	$$18 : .  (43)

	.  reduce 43

	$$18  goto 72


state 49
	statement : CONTINUE . $$19 ';'  (46)
	$$19 : .  (45)

	.  reduce 45

	$$19  goto 73


state 50
	scopeFunVarDecls : typeVar . $$22 listScopeFunVar  (69)
	$$22 : .  (68)

	.  reduce 68

	$$22  goto 74


state 51
	methodDecl : '(' $$6 argsList ')' '{' statementList . '}' declList  (14)

	'}'  shift 75
	.  error


state 52
	statementList : statement . statementList  (24)
	statementList : .  (25)

	IDENT  shift 41
	INT  shift 4
	BOOL  shift 5
	DOUBLE  shift 7
	STRING  shift 8
	SWITCH  shift 42
	WHILE  shift 43
	DO  shift 44
	FOR  shift 45
	IF  shift 46
	RETURN  shift 47
	BREAK  shift 48
	CONTINUE  shift 49
	'}'  reduce 25

	typeVar  goto 50
	statementList  goto 76
	statement  goto 52
	scopeFunVarDecls  goto 53
	attribWithExpr  goto 54


state 53
	statement : scopeFunVarDecls . ';'  (26)

	';'  shift 77
	.  error


state 54
	statement : attribWithExpr . ';'  (27)

	';'  shift 78
	.  error


state 55
	argsListComma : ',' argRule argsListComma .  (22)

	.  reduce 22


state 56
	nameDecls : ',' listNameDecls .  (17)

	.  reduce 17


state 57
	attribWithExpr : IDENT ATTRIB . expression  (57)

	NUM  shift 63
	IDENT  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NOT  shift 67
	'('  shift 68
	.  error

	expression  goto 79
	validCaseSwitch  goto 70
	expressionWithFun  goto 71


state 58
	statement : SWITCH '(' . expression ')' '{' listSwitchCase '}'  (47)

	NUM  shift 63
	IDENT  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NOT  shift 67
	'('  shift 68
	.  error

	expression  goto 80
	validCaseSwitch  goto 70
	expressionWithFun  goto 71


state 59
	statement : WHILE $$11 . '(' expression $$12 ')' $$13 statementElements  (36)

	'('  shift 81
	.  error


state 60
	statement : DO $$14 . $$15 statementElements WHILE '(' expression $$16 ')'  (40)
	$$15 : .  (38)

	.  reduce 38

	$$15  goto 82


state 61
	statement : FOR '(' . $$9 scopeForVarDecls ';' expressionForDecls ';' counterForDecls ')' $$10 statementElements  (32)
	$$9 : .  (30)

	.  reduce 30

	$$9  goto 83


state 62
	statement : IF '(' . expression $$17 ')' statementElements elseifStatement  (42)

	NUM  shift 63
	IDENT  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NOT  shift 67
	'('  shift 68
	.  error

	expression  goto 84
	validCaseSwitch  goto 70
	expressionWithFun  goto 71


state 63
	validCaseSwitch : NUM .  (64)

	.  reduce 64


state 64
	validCaseSwitch : IDENT .  (63)
	expressionWithFun : IDENT . '(' argsSourceList ')'  (81)

	'('  shift 85
	AND  reduce 63
	OR  reduce 63
	DIV  reduce 63
	MOD  reduce 63
	EQ  reduce 63
	NEQ  reduce 63
	LEQ  reduce 63
	GEQ  reduce 63
	'<'  reduce 63
	'>'  reduce 63
	'*'  reduce 63
	'+'  reduce 63
	'-'  reduce 63
	';'  reduce 63
	','  reduce 63
	')'  reduce 63


state 65
	validCaseSwitch : TRUE .  (65)

	.  reduce 65


state 66
	validCaseSwitch : FALSE .  (66)

	.  reduce 66


state 67
	expression : NOT . expression  (98)

	NUM  shift 63
	IDENT  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NOT  shift 67
	'('  shift 68
	.  error

	expression  goto 86
	validCaseSwitch  goto 70
	expressionWithFun  goto 71


state 68
	expression : '(' . expression ')'  (99)

	NUM  shift 63
	IDENT  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NOT  shift 67
	'('  shift 68
	.  error

	expression  goto 87
	validCaseSwitch  goto 70
	expressionWithFun  goto 71


state 69
	statement : RETURN expression . $$8 ';'  (29)
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)
	$$8 : .  (28)

	AND  shift 88
	OR  shift 89
	DIV  shift 90
	MOD  shift 91
	EQ  shift 92
	NEQ  shift 93
	LEQ  shift 94
	GEQ  shift 95
	'<'  shift 96
	'>'  shift 97
	'*'  shift 98
	'+'  shift 99
	'-'  shift 100
	';'  reduce 28

	$$8  goto 101


state 70
	expression : validCaseSwitch .  (101)

	.  reduce 101


state 71
	expression : expressionWithFun .  (100)

	.  reduce 100


state 72
	statement : BREAK $$18 . ';'  (44)

	';'  shift 102
	.  error


state 73
	statement : CONTINUE $$19 . ';'  (46)

	';'  shift 103
	.  error


state 74
	scopeFunVarDecls : typeVar $$22 . listScopeFunVar  (69)

	IDENT  shift 104
	.  error

	attribWithExpr  goto 105
	listScopeFunVar  goto 106


state 75
	methodDecl : '(' $$6 argsList ')' '{' statementList '}' . declList  (14)
	declList : .  (7)

	IDENT  shift 3
	INT  shift 4
	BOOL  shift 5
	VOID  shift 6
	DOUBLE  shift 7
	STRING  shift 8
	$end  reduce 7

	typeVar  goto 9
	declList  goto 107


state 76
	statementList : statement statementList .  (24)

	.  reduce 24


state 77
	statement : scopeFunVarDecls ';' .  (26)

	.  reduce 26


state 78
	statement : attribWithExpr ';' .  (27)

	.  reduce 27


state 79
	attribWithExpr : IDENT ATTRIB expression .  (57)
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)

	AND  shift 88
	OR  shift 89
	DIV  shift 90
	MOD  shift 91
	EQ  shift 92
	NEQ  shift 93
	LEQ  shift 94
	GEQ  shift 95
	'<'  shift 96
	'>'  shift 97
	'*'  shift 98
	'+'  shift 99
	'-'  shift 100
	';'  reduce 57
	','  reduce 57


state 80
	statement : SWITCH '(' expression . ')' '{' listSwitchCase '}'  (47)
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)

	AND  shift 88
	OR  shift 89
	DIV  shift 90
	MOD  shift 91
	EQ  shift 92
	NEQ  shift 93
	LEQ  shift 94
	GEQ  shift 95
	'<'  shift 96
	'>'  shift 97
	'*'  shift 98
	'+'  shift 99
	'-'  shift 100
	')'  shift 108
	.  error


state 81
	statement : WHILE $$11 '(' . expression $$12 ')' $$13 statementElements  (36)

	NUM  shift 63
	IDENT  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NOT  shift 67
	'('  shift 68
	.  error

	expression  goto 109
	validCaseSwitch  goto 70
	expressionWithFun  goto 71


state 82
	statement : DO $$14 $$15 . statementElements WHILE '(' expression $$16 ')'  (40)

	IDENT  shift 41
	INT  shift 4
	BOOL  shift 5
	DOUBLE  shift 7
	STRING  shift 8
	SWITCH  shift 42
	WHILE  shift 43
	DO  shift 44
	FOR  shift 45
	IF  shift 46
	RETURN  shift 47
	BREAK  shift 48
	CONTINUE  shift 49
	'{'  shift 110
	.  error

	typeVar  goto 50
	statement  goto 111
	scopeFunVarDecls  goto 53
	attribWithExpr  goto 54
	statementElements  goto 112


state 83
	statement : FOR '(' $$9 . scopeForVarDecls ';' expressionForDecls ';' counterForDecls ')' $$10 statementElements  (32)
	scopeForVarDecls : .  (50)

	IDENT  shift 3
	INT  shift 4
	BOOL  shift 5
	DOUBLE  shift 7
	STRING  shift 8
	';'  reduce 50

	typeVar  goto 113
	scopeForVarDecls  goto 114


state 84
	statement : IF '(' expression . $$17 ')' statementElements elseifStatement  (42)
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)
	$$17 : .  (41)

	AND  shift 88
	OR  shift 89
	DIV  shift 90
	MOD  shift 91
	EQ  shift 92
	NEQ  shift 93
	LEQ  shift 94
	GEQ  shift 95
	'<'  shift 96
	'>'  shift 97
	'*'  shift 98
	'+'  shift 99
	'-'  shift 100
	')'  reduce 41

	$$17  goto 115


state 85
	expressionWithFun : IDENT '(' . argsSourceList ')'  (81)

	NUM  shift 63
	IDENT  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NOT  shift 67
	'('  shift 68
	.  error

	expression  goto 116
	validCaseSwitch  goto 70
	expressionWithFun  goto 71
	argsSourceList  goto 117


state 86
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)
	expression : NOT expression .  (98)

	AND  shift 88
	OR  shift 89
	DIV  shift 90
	MOD  shift 91
	EQ  shift 92
	NEQ  shift 93
	LEQ  shift 94
	GEQ  shift 95
	'<'  shift 96
	'>'  shift 97
	'*'  shift 98
	'+'  shift 99
	'-'  shift 100
	';'  reduce 98
	','  reduce 98
	')'  reduce 98


state 87
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)
	expression : '(' expression . ')'  (99)

	AND  shift 88
	OR  shift 89
	DIV  shift 90
	MOD  shift 91
	EQ  shift 92
	NEQ  shift 93
	LEQ  shift 94
	GEQ  shift 95
	'<'  shift 96
	'>'  shift 97
	'*'  shift 98
	'+'  shift 99
	'-'  shift 100
	')'  shift 118
	.  error


state 88
	expression : expression AND . expression  (91)

	NUM  shift 63
	IDENT  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NOT  shift 67
	'('  shift 68
	.  error

	expression  goto 119
	validCaseSwitch  goto 70
	expressionWithFun  goto 71


state 89
	expression : expression OR . expression  (90)

	NUM  shift 63
	IDENT  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NOT  shift 67
	'('  shift 68
	.  error

	expression  goto 120
	validCaseSwitch  goto 70
	expressionWithFun  goto 71


state 90
	expression : expression DIV . expression  (88)

	NUM  shift 63
	IDENT  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NOT  shift 67
	'('  shift 68
	.  error

	expression  goto 121
	validCaseSwitch  goto 70
	expressionWithFun  goto 71


state 91
	expression : expression MOD . expression  (89)

	NUM  shift 63
	IDENT  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NOT  shift 67
	'('  shift 68
	.  error

	expression  goto 122
	validCaseSwitch  goto 70
	expressionWithFun  goto 71


state 92
	expression : expression EQ . expression  (94)

	NUM  shift 63
	IDENT  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NOT  shift 67
	'('  shift 68
	.  error

	expression  goto 123
	validCaseSwitch  goto 70
	expressionWithFun  goto 71


state 93
	expression : expression NEQ . expression  (97)

	NUM  shift 63
	IDENT  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NOT  shift 67
	'('  shift 68
	.  error

	expression  goto 124
	validCaseSwitch  goto 70
	expressionWithFun  goto 71


state 94
	expression : expression LEQ . expression  (93)

	NUM  shift 63
	IDENT  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NOT  shift 67
	'('  shift 68
	.  error

	expression  goto 125
	validCaseSwitch  goto 70
	expressionWithFun  goto 71


state 95
	expression : expression GEQ . expression  (95)

	NUM  shift 63
	IDENT  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NOT  shift 67
	'('  shift 68
	.  error

	expression  goto 126
	validCaseSwitch  goto 70
	expressionWithFun  goto 71


state 96
	expression : expression '<' . expression  (92)

	NUM  shift 63
	IDENT  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NOT  shift 67
	'('  shift 68
	.  error

	expression  goto 127
	validCaseSwitch  goto 70
	expressionWithFun  goto 71


state 97
	expression : expression '>' . expression  (96)

	NUM  shift 63
	IDENT  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NOT  shift 67
	'('  shift 68
	.  error

	expression  goto 128
	validCaseSwitch  goto 70
	expressionWithFun  goto 71


state 98
	expression : expression '*' . expression  (87)

	NUM  shift 63
	IDENT  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NOT  shift 67
	'('  shift 68
	.  error

	expression  goto 129
	validCaseSwitch  goto 70
	expressionWithFun  goto 71


state 99
	expression : expression '+' . expression  (85)

	NUM  shift 63
	IDENT  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NOT  shift 67
	'('  shift 68
	.  error

	expression  goto 130
	validCaseSwitch  goto 70
	expressionWithFun  goto 71


state 100
	expression : expression '-' . expression  (86)

	NUM  shift 63
	IDENT  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NOT  shift 67
	'('  shift 68
	.  error

	expression  goto 131
	validCaseSwitch  goto 70
	expressionWithFun  goto 71


state 101
	statement : RETURN expression $$8 . ';'  (29)

	';'  shift 132
	.  error


state 102
	statement : BREAK $$18 ';' .  (44)

	.  reduce 44


state 103
	statement : CONTINUE $$19 ';' .  (46)

	.  reduce 46


state 104
	attribWithExpr : IDENT . ATTRIB expression  (57)

	ATTRIB  shift 57
	.  error


state 105
	listScopeFunVar : attribWithExpr . extendListScopeFunVar  (70)
	extendListScopeFunVar : .  (72)

	','  shift 133
	';'  reduce 72

	extendListScopeFunVar  goto 134


state 106
	scopeFunVarDecls : typeVar $$22 listScopeFunVar .  (69)

	.  reduce 69


state 107
	methodDecl : '(' $$6 argsList ')' '{' statementList '}' declList .  (14)

	.  reduce 14


state 108
	statement : SWITCH '(' expression ')' . '{' listSwitchCase '}'  (47)

	'{'  shift 135
	.  error


state 109
	statement : WHILE $$11 '(' expression . $$12 ')' $$13 statementElements  (36)
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)
	$$12 : .  (34)

	AND  shift 88
	OR  shift 89
	DIV  shift 90
	MOD  shift 91
	EQ  shift 92
	NEQ  shift 93
	LEQ  shift 94
	GEQ  shift 95
	'<'  shift 96
	'>'  shift 97
	'*'  shift 98
	'+'  shift 99
	'-'  shift 100
	')'  reduce 34

	$$12  goto 136


state 110
	statementElements : '{' . statementList '}'  (59)
	statementList : .  (25)

	IDENT  shift 41
	INT  shift 4
	BOOL  shift 5
	DOUBLE  shift 7
	STRING  shift 8
	SWITCH  shift 42
	WHILE  shift 43
	DO  shift 44
	FOR  shift 45
	IF  shift 46
	RETURN  shift 47
	BREAK  shift 48
	CONTINUE  shift 49
	'}'  reduce 25

	typeVar  goto 50
	statementList  goto 137
	statement  goto 52
	scopeFunVarDecls  goto 53
	attribWithExpr  goto 54


state 111
	statementElements : statement .  (58)

	.  reduce 58


state 112
	statement : DO $$14 $$15 statementElements . WHILE '(' expression $$16 ')'  (40)

	WHILE  shift 138
	.  error


state 113
	scopeForVarDecls : typeVar . $$20 attribScopeForVars  (49)
	$$20 : .  (48)

	.  reduce 48

	$$20  goto 139


state 114
	statement : FOR '(' $$9 scopeForVarDecls . ';' expressionForDecls ';' counterForDecls ')' $$10 statementElements  (32)

	';'  shift 140
	.  error


state 115
	statement : IF '(' expression $$17 . ')' statementElements elseifStatement  (42)

	')'  shift 141
	.  error


state 116
	argsSourceList : expression . expressionList  (82)
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)
	expressionList : .  (84)

	AND  shift 88
	OR  shift 89
	DIV  shift 90
	MOD  shift 91
	EQ  shift 92
	NEQ  shift 93
	LEQ  shift 94
	GEQ  shift 95
	'<'  shift 96
	'>'  shift 97
	'*'  shift 98
	'+'  shift 99
	'-'  shift 100
	','  shift 142
	')'  reduce 84

	expressionList  goto 143


state 117
	expressionWithFun : IDENT '(' argsSourceList . ')'  (81)

	')'  shift 144
	.  error


state 118
	expression : '(' expression ')' .  (99)

	.  reduce 99


state 119
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression AND expression .  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)

	.  reduce 91


state 120
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression OR expression .  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)

	.  reduce 90


state 121
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression DIV expression .  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)

	AND  shift 88
	OR  shift 89
	'+'  shift 99
	'-'  shift 100
	DIV  reduce 88
	MOD  reduce 88
	EQ  reduce 88
	NEQ  reduce 88
	LEQ  reduce 88
	GEQ  reduce 88
	'<'  reduce 88
	'>'  reduce 88
	'*'  reduce 88
	';'  reduce 88
	','  reduce 88
	')'  reduce 88


state 122
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression MOD expression .  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)

	AND  shift 88
	OR  shift 89
	'+'  shift 99
	'-'  shift 100
	DIV  reduce 89
	MOD  reduce 89
	EQ  reduce 89
	NEQ  reduce 89
	LEQ  reduce 89
	GEQ  reduce 89
	'<'  reduce 89
	'>'  reduce 89
	'*'  reduce 89
	';'  reduce 89
	','  reduce 89
	')'  reduce 89


state 123
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression EQ expression .  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)

	AND  shift 88
	OR  shift 89
	DIV  shift 90
	MOD  shift 91
	'*'  shift 98
	'+'  shift 99
	'-'  shift 100
	';'  reduce 94
	','  reduce 94
	')'  reduce 94


state 124
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)
	expression : expression NEQ expression .  (97)

	AND  shift 88
	OR  shift 89
	DIV  shift 90
	MOD  shift 91
	'*'  shift 98
	'+'  shift 99
	'-'  shift 100
	';'  reduce 97
	','  reduce 97
	')'  reduce 97


state 125
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression LEQ expression .  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)

	AND  shift 88
	OR  shift 89
	DIV  shift 90
	MOD  shift 91
	'*'  shift 98
	'+'  shift 99
	'-'  shift 100
	';'  reduce 93
	','  reduce 93
	')'  reduce 93


state 126
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression GEQ expression .  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)

	AND  shift 88
	OR  shift 89
	DIV  shift 90
	MOD  shift 91
	'*'  shift 98
	'+'  shift 99
	'-'  shift 100
	';'  reduce 95
	','  reduce 95
	')'  reduce 95


state 127
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression '<' expression .  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)

	AND  shift 88
	OR  shift 89
	DIV  shift 90
	MOD  shift 91
	'*'  shift 98
	'+'  shift 99
	'-'  shift 100
	';'  reduce 92
	','  reduce 92
	')'  reduce 92


state 128
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression '>' expression .  (96)
	expression : expression . NEQ expression  (97)

	AND  shift 88
	OR  shift 89
	DIV  shift 90
	MOD  shift 91
	'*'  shift 98
	'+'  shift 99
	'-'  shift 100
	';'  reduce 96
	','  reduce 96
	')'  reduce 96


state 129
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression '*' expression .  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)

	AND  shift 88
	OR  shift 89
	'+'  shift 99
	'-'  shift 100
	DIV  reduce 87
	MOD  reduce 87
	EQ  reduce 87
	NEQ  reduce 87
	LEQ  reduce 87
	GEQ  reduce 87
	'<'  reduce 87
	'>'  reduce 87
	'*'  reduce 87
	';'  reduce 87
	','  reduce 87
	')'  reduce 87


state 130
	expression : expression . '+' expression  (85)
	expression : expression '+' expression .  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)

	AND  shift 88
	OR  shift 89
	DIV  reduce 85
	MOD  reduce 85
	EQ  reduce 85
	NEQ  reduce 85
	LEQ  reduce 85
	GEQ  reduce 85
	'<'  reduce 85
	'>'  reduce 85
	'*'  reduce 85
	'+'  reduce 85
	'-'  reduce 85
	';'  reduce 85
	','  reduce 85
	')'  reduce 85


state 131
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression '-' expression .  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)

	AND  shift 88
	OR  shift 89
	DIV  reduce 86
	MOD  reduce 86
	EQ  reduce 86
	NEQ  reduce 86
	LEQ  reduce 86
	GEQ  reduce 86
	'<'  reduce 86
	'>'  reduce 86
	'*'  reduce 86
	'+'  reduce 86
	'-'  reduce 86
	';'  reduce 86
	','  reduce 86
	')'  reduce 86


state 132
	statement : RETURN expression $$8 ';' .  (29)

	.  reduce 29


state 133
	extendListScopeFunVar : ',' . listScopeFunVar  (71)

	IDENT  shift 104
	.  error

	attribWithExpr  goto 105
	listScopeFunVar  goto 145


state 134
	listScopeFunVar : attribWithExpr extendListScopeFunVar .  (70)

	.  reduce 70


state 135
	statement : SWITCH '(' expression ')' '{' . listSwitchCase '}'  (47)
	listSwitchCase : .  (62)

	CASE  shift 146
	DEFAULT  shift 147
	'}'  reduce 62

	listSwitchCase  goto 148


state 136
	statement : WHILE $$11 '(' expression $$12 . ')' $$13 statementElements  (36)

	')'  shift 149
	.  error


state 137
	statementElements : '{' statementList . '}'  (59)

	'}'  shift 150
	.  error


state 138
	statement : DO $$14 $$15 statementElements WHILE . '(' expression $$16 ')'  (40)

	'('  shift 151
	.  error


state 139
	scopeForVarDecls : typeVar $$20 . attribScopeForVars  (49)

	IDENT  shift 152
	.  error

	attribScopeForVars  goto 153


state 140
	statement : FOR '(' $$9 scopeForVarDecls ';' . expressionForDecls ';' counterForDecls ')' $$10 statementElements  (32)
	expressionForDecls : .  (74)

	NUM  shift 63
	IDENT  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NOT  shift 67
	'('  shift 68
	';'  reduce 74

	expression  goto 154
	validCaseSwitch  goto 70
	expressionWithFun  goto 71
	expressionForDecls  goto 155


state 141
	statement : IF '(' expression $$17 ')' . statementElements elseifStatement  (42)

	IDENT  shift 41
	INT  shift 4
	BOOL  shift 5
	DOUBLE  shift 7
	STRING  shift 8
	SWITCH  shift 42
	WHILE  shift 43
	DO  shift 44
	FOR  shift 45
	IF  shift 46
	RETURN  shift 47
	BREAK  shift 48
	CONTINUE  shift 49
	'{'  shift 110
	.  error

	typeVar  goto 50
	statement  goto 111
	scopeFunVarDecls  goto 53
	attribWithExpr  goto 54
	statementElements  goto 156


state 142
	expressionList : ',' . argsSourceList  (83)

	NUM  shift 63
	IDENT  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NOT  shift 67
	'('  shift 68
	.  error

	expression  goto 116
	validCaseSwitch  goto 70
	expressionWithFun  goto 71
	argsSourceList  goto 157


state 143
	argsSourceList : expression expressionList .  (82)

	.  reduce 82


state 144
	expressionWithFun : IDENT '(' argsSourceList ')' .  (81)

	.  reduce 81


state 145
	extendListScopeFunVar : ',' listScopeFunVar .  (71)

	.  reduce 71


state 146
	listSwitchCase : CASE . validCaseSwitch statementSwitchCase  (60)

	NUM  shift 63
	IDENT  shift 158
	TRUE  shift 65
	FALSE  shift 66
	.  error

	validCaseSwitch  goto 159


state 147
	listSwitchCase : DEFAULT . statementSwitchCase  (61)

	':'  shift 160
	.  error

	statementSwitchCase  goto 161


state 148
	statement : SWITCH '(' expression ')' '{' listSwitchCase . '}'  (47)

	'}'  shift 162
	.  error


state 149
	statement : WHILE $$11 '(' expression $$12 ')' . $$13 statementElements  (36)
	$$13 : .  (35)

	.  reduce 35

	$$13  goto 163


state 150
	statementElements : '{' statementList '}' .  (59)

	.  reduce 59


state 151
	statement : DO $$14 $$15 statementElements WHILE '(' . expression $$16 ')'  (40)

	NUM  shift 63
	IDENT  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NOT  shift 67
	'('  shift 68
	.  error

	expression  goto 164
	validCaseSwitch  goto 70
	expressionWithFun  goto 71


state 152
	attribScopeForVars : IDENT . ATTRIB expression $$21 extendScopeForVars  (52)

	ATTRIB  shift 165
	.  error


state 153
	scopeForVarDecls : typeVar $$20 attribScopeForVars .  (49)

	.  reduce 49


state 154
	expressionForDecls : expression .  (73)
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)

	AND  shift 88
	OR  shift 89
	DIV  shift 90
	MOD  shift 91
	EQ  shift 92
	NEQ  shift 93
	LEQ  shift 94
	GEQ  shift 95
	'<'  shift 96
	'>'  shift 97
	'*'  shift 98
	'+'  shift 99
	'-'  shift 100
	';'  reduce 73


state 155
	statement : FOR '(' $$9 scopeForVarDecls ';' expressionForDecls . ';' counterForDecls ')' $$10 statementElements  (32)

	';'  shift 166
	.  error


156: shift/reduce conflict (shift 167, reduce 56) on ELSE
state 156
	statement : IF '(' expression $$17 ')' statementElements . elseifStatement  (42)
	elseifStatement : .  (56)

	ELSE  shift 167
	IDENT  reduce 56
	INT  reduce 56
	BOOL  reduce 56
	DOUBLE  reduce 56
	STRING  reduce 56
	SWITCH  reduce 56
	CASE  reduce 56
	DEFAULT  reduce 56
	WHILE  reduce 56
	DO  reduce 56
	FOR  reduce 56
	IF  reduce 56
	RETURN  reduce 56
	BREAK  reduce 56
	CONTINUE  reduce 56
	'}'  reduce 56

	elseifStatement  goto 168


state 157
	expressionList : ',' argsSourceList .  (83)

	.  reduce 83


state 158
	validCaseSwitch : IDENT .  (63)

	.  reduce 63


state 159
	listSwitchCase : CASE validCaseSwitch . statementSwitchCase  (60)

	':'  shift 160
	.  error

	statementSwitchCase  goto 169


state 160
	statementSwitchCase : ':' . statementElements listSwitchCase  (67)

	IDENT  shift 41
	INT  shift 4
	BOOL  shift 5
	DOUBLE  shift 7
	STRING  shift 8
	SWITCH  shift 42
	WHILE  shift 43
	DO  shift 44
	FOR  shift 45
	IF  shift 46
	RETURN  shift 47
	BREAK  shift 48
	CONTINUE  shift 49
	'{'  shift 110
	.  error

	typeVar  goto 50
	statement  goto 111
	scopeFunVarDecls  goto 53
	attribWithExpr  goto 54
	statementElements  goto 170


state 161
	listSwitchCase : DEFAULT statementSwitchCase .  (61)

	.  reduce 61


state 162
	statement : SWITCH '(' expression ')' '{' listSwitchCase '}' .  (47)

	.  reduce 47


state 163
	statement : WHILE $$11 '(' expression $$12 ')' $$13 . statementElements  (36)

	IDENT  shift 41
	INT  shift 4
	BOOL  shift 5
	DOUBLE  shift 7
	STRING  shift 8
	SWITCH  shift 42
	WHILE  shift 43
	DO  shift 44
	FOR  shift 45
	IF  shift 46
	RETURN  shift 47
	BREAK  shift 48
	CONTINUE  shift 49
	'{'  shift 110
	.  error

	typeVar  goto 50
	statement  goto 111
	scopeFunVarDecls  goto 53
	attribWithExpr  goto 54
	statementElements  goto 171


state 164
	statement : DO $$14 $$15 statementElements WHILE '(' expression . $$16 ')'  (40)
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)
	$$16 : .  (39)

	AND  shift 88
	OR  shift 89
	DIV  shift 90
	MOD  shift 91
	EQ  shift 92
	NEQ  shift 93
	LEQ  shift 94
	GEQ  shift 95
	'<'  shift 96
	'>'  shift 97
	'*'  shift 98
	'+'  shift 99
	'-'  shift 100
	')'  reduce 39

	$$16  goto 172


state 165
	attribScopeForVars : IDENT ATTRIB . expression $$21 extendScopeForVars  (52)

	NUM  shift 63
	IDENT  shift 64
	TRUE  shift 65
	FALSE  shift 66
	NOT  shift 67
	'('  shift 68
	.  error

	expression  goto 173
	validCaseSwitch  goto 70
	expressionWithFun  goto 71


state 166
	statement : FOR '(' $$9 scopeForVarDecls ';' expressionForDecls ';' . counterForDecls ')' $$10 statementElements  (32)
	counterForDecls : .  (76)

	IDENT  shift 174
	')'  reduce 76

	counterForDecls  goto 175


state 167
	elseifStatement : ELSE . statementElements  (55)

	IDENT  shift 41
	INT  shift 4
	BOOL  shift 5
	DOUBLE  shift 7
	STRING  shift 8
	SWITCH  shift 42
	WHILE  shift 43
	DO  shift 44
	FOR  shift 45
	IF  shift 46
	RETURN  shift 47
	BREAK  shift 48
	CONTINUE  shift 49
	'{'  shift 110
	.  error

	typeVar  goto 50
	statement  goto 111
	scopeFunVarDecls  goto 53
	attribWithExpr  goto 54
	statementElements  goto 176


state 168
	statement : IF '(' expression $$17 ')' statementElements elseifStatement .  (42)

	.  reduce 42


state 169
	listSwitchCase : CASE validCaseSwitch statementSwitchCase .  (60)

	.  reduce 60


state 170
	statementSwitchCase : ':' statementElements . listSwitchCase  (67)
	listSwitchCase : .  (62)

	CASE  shift 146
	DEFAULT  shift 147
	'}'  reduce 62

	listSwitchCase  goto 177


state 171
	statement : WHILE $$11 '(' expression $$12 ')' $$13 statementElements .  (36)

	.  reduce 36


state 172
	statement : DO $$14 $$15 statementElements WHILE '(' expression $$16 . ')'  (40)

	')'  shift 178
	.  error


state 173
	attribScopeForVars : IDENT ATTRIB expression . $$21 extendScopeForVars  (52)
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)
	$$21 : .  (51)

	AND  shift 88
	OR  shift 89
	DIV  shift 90
	MOD  shift 91
	EQ  shift 92
	NEQ  shift 93
	LEQ  shift 94
	GEQ  shift 95
	'<'  shift 96
	'>'  shift 97
	'*'  shift 98
	'+'  shift 99
	'-'  shift 100
	';'  reduce 51
	','  reduce 51

	$$21  goto 179


state 174
	counterForDecls : IDENT . operatorIncr listCounterForDecls  (75)

	INCREMENT  shift 180
	DECREMENT  shift 181
	.  error

	operatorIncr  goto 182


state 175
	statement : FOR '(' $$9 scopeForVarDecls ';' expressionForDecls ';' counterForDecls . ')' $$10 statementElements  (32)

	')'  shift 183
	.  error


state 176
	elseifStatement : ELSE statementElements .  (55)

	.  reduce 55


state 177
	statementSwitchCase : ':' statementElements listSwitchCase .  (67)

	.  reduce 67


state 178
	statement : DO $$14 $$15 statementElements WHILE '(' expression $$16 ')' .  (40)

	.  reduce 40


state 179
	attribScopeForVars : IDENT ATTRIB expression $$21 . extendScopeForVars  (52)
	extendScopeForVars : .  (54)

	','  shift 184
	';'  reduce 54

	extendScopeForVars  goto 185


state 180
	operatorIncr : INCREMENT .  (79)

	.  reduce 79


state 181
	operatorIncr : DECREMENT .  (80)

	.  reduce 80


state 182
	counterForDecls : IDENT operatorIncr . listCounterForDecls  (75)
	listCounterForDecls : .  (78)

	','  shift 186
	')'  reduce 78

	listCounterForDecls  goto 187


state 183
	statement : FOR '(' $$9 scopeForVarDecls ';' expressionForDecls ';' counterForDecls ')' . $$10 statementElements  (32)
	$$10 : .  (31)

	.  reduce 31

	$$10  goto 188


state 184
	extendScopeForVars : ',' . attribScopeForVars  (53)

	IDENT  shift 152
	.  error

	attribScopeForVars  goto 189


state 185
	attribScopeForVars : IDENT ATTRIB expression $$21 extendScopeForVars .  (52)

	.  reduce 52


state 186
	listCounterForDecls : ',' . counterForDecls  (77)
	counterForDecls : .  (76)

	IDENT  shift 174
	')'  reduce 76

	counterForDecls  goto 190


state 187
	counterForDecls : IDENT operatorIncr listCounterForDecls .  (75)

	.  reduce 75


state 188
	statement : FOR '(' $$9 scopeForVarDecls ';' expressionForDecls ';' counterForDecls ')' $$10 . statementElements  (32)

	IDENT  shift 41
	INT  shift 4
	BOOL  shift 5
	DOUBLE  shift 7
	STRING  shift 8
	SWITCH  shift 42
	WHILE  shift 43
	DO  shift 44
	FOR  shift 45
	IF  shift 46
	RETURN  shift 47
	BREAK  shift 48
	CONTINUE  shift 49
	'{'  shift 110
	.  error

	typeVar  goto 50
	statement  goto 111
	scopeFunVarDecls  goto 53
	attribWithExpr  goto 54
	statementElements  goto 191


state 189
	extendScopeForVars : ',' attribScopeForVars .  (53)

	.  reduce 53


state 190
	listCounterForDecls : ',' counterForDecls .  (77)

	.  reduce 77


state 191
	statement : FOR '(' $$9 scopeForVarDecls ';' expressionForDecls ';' counterForDecls ')' $$10 statementElements .  (32)

	.  reduce 32


State 156 contains 1 shift/reduce conflict.


47 terminals, 55 nonterminals
107 grammar rules, 192 states
