   0  $accept : program $end

   1  $$1 :

   2  program : $$1 declList

   3  $$2 :

   4  declList : typeVar IDENT $$2 declarations

   5  $$3 :

   6  declList : VOID IDENT $$3 methodDecl
   7           |

   8  $$4 :

   9  declarations : ';' $$4 declList

  10  $$5 :

  11  declarations : ',' $$5 listNameDecls ';' declList
  12               | methodDecl

  13  $$6 :

  14  methodDecl : '(' $$6 argsList ')' '{' statementList '}' declList

  15  $$7 :

  16  listNameDecls : IDENT $$7 nameDecls

  17  nameDecls : ',' listNameDecls
  18            |

  19  argsList : argRule argsListComma
  20           |

  21  argRule : typeVar IDENT

  22  argsListComma : ',' argRule argsListComma
  23                |

  24  statementList : statementList statement
  25                |

  26  statement : '{' statementList '}'
  27            | scopeFunVarDecls ';'
  28            | attribWithExpr ';'

  29  $$8 :

  30  statement : RETURN expression $$8 ';'

  31  $$9 :

  32  $$10 :

  33  statement : FOR '(' $$9 scopeForVarDecls ';' expressionForDecls ';' counterForDecls ')' $$10 statement

  34  $$11 :

  35  $$12 :

  36  $$13 :

  37  statement : WHILE $$11 '(' expression $$12 ')' $$13 statement

  38  $$14 :

  39  $$15 :

  40  $$16 :

  41  statement : DO $$14 $$15 statement WHILE '(' expression $$16 ')'
  42            | ifStatement

  43  $$17 :

  44  statement : BREAK $$17 ';'

  45  $$18 :

  46  statement : CONTINUE $$18 ';'
  47            | SWITCH '(' expression ')' '{' listSwitchCase '}'

  48  ifStatement : ifStatementWithoutElse
  49              | ifStatementWithoutElse ELSE statement

  50  $$19 :

  51  ifStatementWithoutElse : IF '(' expression $$19 ')' statement

  52  $$20 :

  53  scopeForVarDecls : typeVar $$20 attribScopeForVars
  54                   |

  55  $$21 :

  56  attribScopeForVars : IDENT ATTRIB expression $$21 extendScopeForVars

  57  extendScopeForVars : ',' attribScopeForVars
  58                     |

  59  attribWithExpr : IDENT ATTRIB expression

  60  listSwitchCase : CASE validCaseSwitch statementSwitchCase
  61                 | DEFAULT statementSwitchCase
  62                 |

  63  validCaseSwitch : IDENT
  64                  | NUM
  65                  | TRUE
  66                  | FALSE

  67  statementSwitchCase : ':' statement listSwitchCase

  68  $$22 :

  69  scopeFunVarDecls : typeVar $$22 listScopeFunVar

  70  listScopeFunVar : attribWithExpr extendListScopeFunVar

  71  extendListScopeFunVar : ',' listScopeFunVar
  72                        |

  73  expressionForDecls : expression
  74                     |

  75  counterForDecls : IDENT operatorIncr listCounterForDecls
  76                  |

  77  listCounterForDecls : ',' counterForDecls
  78                      |

  79  operatorIncr : INCREMENT
  80               | DECREMENT

  81  expressionWithFun : IDENT '(' argsSourceList ')'

  82  argsSourceList : expression expressionList

  83  expressionList : ',' argsSourceList
  84                 |

  85  expression : expression '+' expression
  86             | expression '-' expression
  87             | expression '*' expression
  88             | expression DIV expression
  89             | expression MOD expression
  90             | expression OR expression
  91             | expression AND expression
  92             | expression '<' expression
  93             | expression LEQ expression
  94             | expression EQ expression
  95             | expression GEQ expression
  96             | expression '>' expression
  97             | expression NEQ expression
  98             | NOT expression
  99             | '(' expression ')'
 100             | expressionWithFun
 101             | validCaseSwitch

 102  typeVar : DOUBLE
 103          | BOOL
 104          | INT
 105          | STRING
 106          | IDENT

state 0
	$accept : . program $end  (0)
	$$1 : .  (1)

	.  reduce 1

	program  goto 1
	$$1  goto 2


state 1
	$accept : program . $end  (0)

	$end  accept


state 2
	program : $$1 . declList  (2)
	declList : .  (7)

	IDENT  shift 3
	INT  shift 4
	BOOL  shift 5
	VOID  shift 6
	DOUBLE  shift 7
	STRING  shift 8
	$end  reduce 7

	typeVar  goto 9
	declList  goto 10


state 3
	typeVar : IDENT .  (106)

	.  reduce 106


state 4
	typeVar : INT .  (104)

	.  reduce 104


state 5
	typeVar : BOOL .  (103)

	.  reduce 103


state 6
	declList : VOID . IDENT $$3 methodDecl  (6)

	IDENT  shift 11
	.  error


state 7
	typeVar : DOUBLE .  (102)

	.  reduce 102


state 8
	typeVar : STRING .  (105)

	.  reduce 105


state 9
	declList : typeVar . IDENT $$2 declarations  (4)

	IDENT  shift 12
	.  error


state 10
	program : $$1 declList .  (2)

	.  reduce 2


state 11
	declList : VOID IDENT . $$3 methodDecl  (6)
	$$3 : .  (5)

	.  reduce 5

	$$3  goto 13


state 12
	declList : typeVar IDENT . $$2 declarations  (4)
	$$2 : .  (3)

	.  reduce 3

	$$2  goto 14


state 13
	declList : VOID IDENT $$3 . methodDecl  (6)

	'('  shift 15
	.  error

	methodDecl  goto 16


state 14
	declList : typeVar IDENT $$2 . declarations  (4)

	'('  shift 15
	';'  shift 17
	','  shift 18
	.  error

	declarations  goto 19
	methodDecl  goto 20


state 15
	methodDecl : '(' . $$6 argsList ')' '{' statementList '}' declList  (14)
	$$6 : .  (13)

	.  reduce 13

	$$6  goto 21


state 16
	declList : VOID IDENT $$3 methodDecl .  (6)

	.  reduce 6


state 17
	declarations : ';' . $$4 declList  (9)
	$$4 : .  (8)

	.  reduce 8

	$$4  goto 22


state 18
	declarations : ',' . $$5 listNameDecls ';' declList  (11)
	$$5 : .  (10)

	.  reduce 10

	$$5  goto 23


state 19
	declList : typeVar IDENT $$2 declarations .  (4)

	.  reduce 4


state 20
	declarations : methodDecl .  (12)

	.  reduce 12


state 21
	methodDecl : '(' $$6 . argsList ')' '{' statementList '}' declList  (14)
	argsList : .  (20)

	IDENT  shift 3
	INT  shift 4
	BOOL  shift 5
	DOUBLE  shift 7
	STRING  shift 8
	')'  reduce 20

	typeVar  goto 24
	argsList  goto 25
	argRule  goto 26


state 22
	declarations : ';' $$4 . declList  (9)
	declList : .  (7)

	IDENT  shift 3
	INT  shift 4
	BOOL  shift 5
	VOID  shift 6
	DOUBLE  shift 7
	STRING  shift 8
	$end  reduce 7

	typeVar  goto 9
	declList  goto 27


state 23
	declarations : ',' $$5 . listNameDecls ';' declList  (11)

	IDENT  shift 28
	.  error

	listNameDecls  goto 29


state 24
	argRule : typeVar . IDENT  (21)

	IDENT  shift 30
	.  error


state 25
	methodDecl : '(' $$6 argsList . ')' '{' statementList '}' declList  (14)

	')'  shift 31
	.  error


state 26
	argsList : argRule . argsListComma  (19)
	argsListComma : .  (23)

	','  shift 32
	')'  reduce 23

	argsListComma  goto 33


state 27
	declarations : ';' $$4 declList .  (9)

	.  reduce 9


state 28
	listNameDecls : IDENT . $$7 nameDecls  (16)
	$$7 : .  (15)

	.  reduce 15

	$$7  goto 34


state 29
	declarations : ',' $$5 listNameDecls . ';' declList  (11)

	';'  shift 35
	.  error


state 30
	argRule : typeVar IDENT .  (21)

	.  reduce 21


state 31
	methodDecl : '(' $$6 argsList ')' . '{' statementList '}' declList  (14)

	'{'  shift 36
	.  error


state 32
	argsListComma : ',' . argRule argsListComma  (22)

	IDENT  shift 3
	INT  shift 4
	BOOL  shift 5
	DOUBLE  shift 7
	STRING  shift 8
	.  error

	typeVar  goto 24
	argRule  goto 37


state 33
	argsList : argRule argsListComma .  (19)

	.  reduce 19


state 34
	listNameDecls : IDENT $$7 . nameDecls  (16)
	nameDecls : .  (18)

	','  shift 38
	';'  reduce 18

	nameDecls  goto 39


state 35
	declarations : ',' $$5 listNameDecls ';' . declList  (11)
	declList : .  (7)

	IDENT  shift 3
	INT  shift 4
	BOOL  shift 5
	VOID  shift 6
	DOUBLE  shift 7
	STRING  shift 8
	$end  reduce 7

	typeVar  goto 9
	declList  goto 40


state 36
	methodDecl : '(' $$6 argsList ')' '{' . statementList '}' declList  (14)
	statementList : .  (25)

	.  reduce 25

	statementList  goto 41


state 37
	argsListComma : ',' argRule . argsListComma  (22)
	argsListComma : .  (23)

	','  shift 32
	')'  reduce 23

	argsListComma  goto 42


state 38
	nameDecls : ',' . listNameDecls  (17)

	IDENT  shift 28
	.  error

	listNameDecls  goto 43


state 39
	listNameDecls : IDENT $$7 nameDecls .  (16)

	.  reduce 16


state 40
	declarations : ',' $$5 listNameDecls ';' declList .  (11)

	.  reduce 11


state 41
	methodDecl : '(' $$6 argsList ')' '{' statementList . '}' declList  (14)
	statementList : statementList . statement  (24)

	IDENT  shift 44
	INT  shift 4
	BOOL  shift 5
	DOUBLE  shift 7
	STRING  shift 8
	SWITCH  shift 45
	WHILE  shift 46
	DO  shift 47
	FOR  shift 48
	IF  shift 49
	RETURN  shift 50
	BREAK  shift 51
	CONTINUE  shift 52
	'{'  shift 53
	'}'  shift 54
	.  error

	typeVar  goto 55
	statement  goto 56
	scopeFunVarDecls  goto 57
	attribWithExpr  goto 58
	ifStatement  goto 59
	ifStatementWithoutElse  goto 60


state 42
	argsListComma : ',' argRule argsListComma .  (22)

	.  reduce 22


state 43
	nameDecls : ',' listNameDecls .  (17)

	.  reduce 17


state 44
	attribWithExpr : IDENT . ATTRIB expression  (59)
	typeVar : IDENT .  (106)

	ATTRIB  shift 61
	IDENT  reduce 106


state 45
	statement : SWITCH . '(' expression ')' '{' listSwitchCase '}'  (47)

	'('  shift 62
	.  error


state 46
	statement : WHILE . $$11 '(' expression $$12 ')' $$13 statement  (37)
	$$11 : .  (34)

	.  reduce 34

	$$11  goto 63


state 47
	statement : DO . $$14 $$15 statement WHILE '(' expression $$16 ')'  (41)
	$$14 : .  (38)

	.  reduce 38

	$$14  goto 64


state 48
	statement : FOR . '(' $$9 scopeForVarDecls ';' expressionForDecls ';' counterForDecls ')' $$10 statement  (33)

	'('  shift 65
	.  error


state 49
	ifStatementWithoutElse : IF . '(' expression $$19 ')' statement  (51)

	'('  shift 66
	.  error


state 50
	statement : RETURN . expression $$8 ';'  (30)

	NUM  shift 67
	IDENT  shift 68
	TRUE  shift 69
	FALSE  shift 70
	NOT  shift 71
	'('  shift 72
	.  error

	expression  goto 73
	validCaseSwitch  goto 74
	expressionWithFun  goto 75


state 51
	statement : BREAK . $$17 ';'  (44)
	$$17 : .  (43)

	.  reduce 43

	$$17  goto 76


state 52
	statement : CONTINUE . $$18 ';'  (46)
	$$18 : .  (45)

	.  reduce 45

	$$18  goto 77


state 53
	statement : '{' . statementList '}'  (26)
	statementList : .  (25)

	.  reduce 25

	statementList  goto 78


state 54
	methodDecl : '(' $$6 argsList ')' '{' statementList '}' . declList  (14)
	declList : .  (7)

	IDENT  shift 3
	INT  shift 4
	BOOL  shift 5
	VOID  shift 6
	DOUBLE  shift 7
	STRING  shift 8
	$end  reduce 7

	typeVar  goto 9
	declList  goto 79


state 55
	scopeFunVarDecls : typeVar . $$22 listScopeFunVar  (69)
	$$22 : .  (68)

	.  reduce 68

	$$22  goto 80


state 56
	statementList : statementList statement .  (24)

	.  reduce 24


state 57
	statement : scopeFunVarDecls . ';'  (27)

	';'  shift 81
	.  error


state 58
	statement : attribWithExpr . ';'  (28)

	';'  shift 82
	.  error


state 59
	statement : ifStatement .  (42)

	.  reduce 42


60: shift/reduce conflict (shift 83, reduce 48) on ELSE
state 60
	ifStatement : ifStatementWithoutElse .  (48)
	ifStatement : ifStatementWithoutElse . ELSE statement  (49)

	ELSE  shift 83
	IDENT  reduce 48
	INT  reduce 48
	BOOL  reduce 48
	DOUBLE  reduce 48
	STRING  reduce 48
	SWITCH  reduce 48
	CASE  reduce 48
	DEFAULT  reduce 48
	WHILE  reduce 48
	DO  reduce 48
	FOR  reduce 48
	IF  reduce 48
	RETURN  reduce 48
	BREAK  reduce 48
	CONTINUE  reduce 48
	'{'  reduce 48
	'}'  reduce 48


state 61
	attribWithExpr : IDENT ATTRIB . expression  (59)

	NUM  shift 67
	IDENT  shift 68
	TRUE  shift 69
	FALSE  shift 70
	NOT  shift 71
	'('  shift 72
	.  error

	expression  goto 84
	validCaseSwitch  goto 74
	expressionWithFun  goto 75


state 62
	statement : SWITCH '(' . expression ')' '{' listSwitchCase '}'  (47)

	NUM  shift 67
	IDENT  shift 68
	TRUE  shift 69
	FALSE  shift 70
	NOT  shift 71
	'('  shift 72
	.  error

	expression  goto 85
	validCaseSwitch  goto 74
	expressionWithFun  goto 75


state 63
	statement : WHILE $$11 . '(' expression $$12 ')' $$13 statement  (37)

	'('  shift 86
	.  error


state 64
	statement : DO $$14 . $$15 statement WHILE '(' expression $$16 ')'  (41)
	$$15 : .  (39)

	.  reduce 39

	$$15  goto 87


state 65
	statement : FOR '(' . $$9 scopeForVarDecls ';' expressionForDecls ';' counterForDecls ')' $$10 statement  (33)
	$$9 : .  (31)

	.  reduce 31

	$$9  goto 88


state 66
	ifStatementWithoutElse : IF '(' . expression $$19 ')' statement  (51)

	NUM  shift 67
	IDENT  shift 68
	TRUE  shift 69
	FALSE  shift 70
	NOT  shift 71
	'('  shift 72
	.  error

	expression  goto 89
	validCaseSwitch  goto 74
	expressionWithFun  goto 75


state 67
	validCaseSwitch : NUM .  (64)

	.  reduce 64


state 68
	validCaseSwitch : IDENT .  (63)
	expressionWithFun : IDENT . '(' argsSourceList ')'  (81)

	'('  shift 90
	AND  reduce 63
	OR  reduce 63
	DIV  reduce 63
	MOD  reduce 63
	EQ  reduce 63
	NEQ  reduce 63
	LEQ  reduce 63
	GEQ  reduce 63
	'<'  reduce 63
	'>'  reduce 63
	'*'  reduce 63
	'+'  reduce 63
	'-'  reduce 63
	';'  reduce 63
	','  reduce 63
	')'  reduce 63


state 69
	validCaseSwitch : TRUE .  (65)

	.  reduce 65


state 70
	validCaseSwitch : FALSE .  (66)

	.  reduce 66


state 71
	expression : NOT . expression  (98)

	NUM  shift 67
	IDENT  shift 68
	TRUE  shift 69
	FALSE  shift 70
	NOT  shift 71
	'('  shift 72
	.  error

	expression  goto 91
	validCaseSwitch  goto 74
	expressionWithFun  goto 75


state 72
	expression : '(' . expression ')'  (99)

	NUM  shift 67
	IDENT  shift 68
	TRUE  shift 69
	FALSE  shift 70
	NOT  shift 71
	'('  shift 72
	.  error

	expression  goto 92
	validCaseSwitch  goto 74
	expressionWithFun  goto 75


state 73
	statement : RETURN expression . $$8 ';'  (30)
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)
	$$8 : .  (29)

	AND  shift 93
	OR  shift 94
	DIV  shift 95
	MOD  shift 96
	EQ  shift 97
	NEQ  shift 98
	LEQ  shift 99
	GEQ  shift 100
	'<'  shift 101
	'>'  shift 102
	'*'  shift 103
	'+'  shift 104
	'-'  shift 105
	';'  reduce 29

	$$8  goto 106


state 74
	expression : validCaseSwitch .  (101)

	.  reduce 101


state 75
	expression : expressionWithFun .  (100)

	.  reduce 100


state 76
	statement : BREAK $$17 . ';'  (44)

	';'  shift 107
	.  error


state 77
	statement : CONTINUE $$18 . ';'  (46)

	';'  shift 108
	.  error


state 78
	statementList : statementList . statement  (24)
	statement : '{' statementList . '}'  (26)

	IDENT  shift 44
	INT  shift 4
	BOOL  shift 5
	DOUBLE  shift 7
	STRING  shift 8
	SWITCH  shift 45
	WHILE  shift 46
	DO  shift 47
	FOR  shift 48
	IF  shift 49
	RETURN  shift 50
	BREAK  shift 51
	CONTINUE  shift 52
	'{'  shift 53
	'}'  shift 109
	.  error

	typeVar  goto 55
	statement  goto 56
	scopeFunVarDecls  goto 57
	attribWithExpr  goto 58
	ifStatement  goto 59
	ifStatementWithoutElse  goto 60


state 79
	methodDecl : '(' $$6 argsList ')' '{' statementList '}' declList .  (14)

	.  reduce 14


state 80
	scopeFunVarDecls : typeVar $$22 . listScopeFunVar  (69)

	IDENT  shift 110
	.  error

	attribWithExpr  goto 111
	listScopeFunVar  goto 112


state 81
	statement : scopeFunVarDecls ';' .  (27)

	.  reduce 27


state 82
	statement : attribWithExpr ';' .  (28)

	.  reduce 28


state 83
	ifStatement : ifStatementWithoutElse ELSE . statement  (49)

	IDENT  shift 44
	INT  shift 4
	BOOL  shift 5
	DOUBLE  shift 7
	STRING  shift 8
	SWITCH  shift 45
	WHILE  shift 46
	DO  shift 47
	FOR  shift 48
	IF  shift 49
	RETURN  shift 50
	BREAK  shift 51
	CONTINUE  shift 52
	'{'  shift 53
	.  error

	typeVar  goto 55
	statement  goto 113
	scopeFunVarDecls  goto 57
	attribWithExpr  goto 58
	ifStatement  goto 59
	ifStatementWithoutElse  goto 60


state 84
	attribWithExpr : IDENT ATTRIB expression .  (59)
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)

	AND  shift 93
	OR  shift 94
	DIV  shift 95
	MOD  shift 96
	EQ  shift 97
	NEQ  shift 98
	LEQ  shift 99
	GEQ  shift 100
	'<'  shift 101
	'>'  shift 102
	'*'  shift 103
	'+'  shift 104
	'-'  shift 105
	';'  reduce 59
	','  reduce 59


state 85
	statement : SWITCH '(' expression . ')' '{' listSwitchCase '}'  (47)
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)

	AND  shift 93
	OR  shift 94
	DIV  shift 95
	MOD  shift 96
	EQ  shift 97
	NEQ  shift 98
	LEQ  shift 99
	GEQ  shift 100
	'<'  shift 101
	'>'  shift 102
	'*'  shift 103
	'+'  shift 104
	'-'  shift 105
	')'  shift 114
	.  error


state 86
	statement : WHILE $$11 '(' . expression $$12 ')' $$13 statement  (37)

	NUM  shift 67
	IDENT  shift 68
	TRUE  shift 69
	FALSE  shift 70
	NOT  shift 71
	'('  shift 72
	.  error

	expression  goto 115
	validCaseSwitch  goto 74
	expressionWithFun  goto 75


state 87
	statement : DO $$14 $$15 . statement WHILE '(' expression $$16 ')'  (41)

	IDENT  shift 44
	INT  shift 4
	BOOL  shift 5
	DOUBLE  shift 7
	STRING  shift 8
	SWITCH  shift 45
	WHILE  shift 46
	DO  shift 47
	FOR  shift 48
	IF  shift 49
	RETURN  shift 50
	BREAK  shift 51
	CONTINUE  shift 52
	'{'  shift 53
	.  error

	typeVar  goto 55
	statement  goto 116
	scopeFunVarDecls  goto 57
	attribWithExpr  goto 58
	ifStatement  goto 59
	ifStatementWithoutElse  goto 60


state 88
	statement : FOR '(' $$9 . scopeForVarDecls ';' expressionForDecls ';' counterForDecls ')' $$10 statement  (33)
	scopeForVarDecls : .  (54)

	IDENT  shift 3
	INT  shift 4
	BOOL  shift 5
	DOUBLE  shift 7
	STRING  shift 8
	';'  reduce 54

	typeVar  goto 117
	scopeForVarDecls  goto 118


state 89
	ifStatementWithoutElse : IF '(' expression . $$19 ')' statement  (51)
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)
	$$19 : .  (50)

	AND  shift 93
	OR  shift 94
	DIV  shift 95
	MOD  shift 96
	EQ  shift 97
	NEQ  shift 98
	LEQ  shift 99
	GEQ  shift 100
	'<'  shift 101
	'>'  shift 102
	'*'  shift 103
	'+'  shift 104
	'-'  shift 105
	')'  reduce 50

	$$19  goto 119


state 90
	expressionWithFun : IDENT '(' . argsSourceList ')'  (81)

	NUM  shift 67
	IDENT  shift 68
	TRUE  shift 69
	FALSE  shift 70
	NOT  shift 71
	'('  shift 72
	.  error

	expression  goto 120
	validCaseSwitch  goto 74
	expressionWithFun  goto 75
	argsSourceList  goto 121


state 91
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)
	expression : NOT expression .  (98)

	AND  shift 93
	OR  shift 94
	DIV  shift 95
	MOD  shift 96
	EQ  shift 97
	NEQ  shift 98
	LEQ  shift 99
	GEQ  shift 100
	'<'  shift 101
	'>'  shift 102
	'*'  shift 103
	'+'  shift 104
	'-'  shift 105
	';'  reduce 98
	','  reduce 98
	')'  reduce 98


state 92
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)
	expression : '(' expression . ')'  (99)

	AND  shift 93
	OR  shift 94
	DIV  shift 95
	MOD  shift 96
	EQ  shift 97
	NEQ  shift 98
	LEQ  shift 99
	GEQ  shift 100
	'<'  shift 101
	'>'  shift 102
	'*'  shift 103
	'+'  shift 104
	'-'  shift 105
	')'  shift 122
	.  error


state 93
	expression : expression AND . expression  (91)

	NUM  shift 67
	IDENT  shift 68
	TRUE  shift 69
	FALSE  shift 70
	NOT  shift 71
	'('  shift 72
	.  error

	expression  goto 123
	validCaseSwitch  goto 74
	expressionWithFun  goto 75


state 94
	expression : expression OR . expression  (90)

	NUM  shift 67
	IDENT  shift 68
	TRUE  shift 69
	FALSE  shift 70
	NOT  shift 71
	'('  shift 72
	.  error

	expression  goto 124
	validCaseSwitch  goto 74
	expressionWithFun  goto 75


state 95
	expression : expression DIV . expression  (88)

	NUM  shift 67
	IDENT  shift 68
	TRUE  shift 69
	FALSE  shift 70
	NOT  shift 71
	'('  shift 72
	.  error

	expression  goto 125
	validCaseSwitch  goto 74
	expressionWithFun  goto 75


state 96
	expression : expression MOD . expression  (89)

	NUM  shift 67
	IDENT  shift 68
	TRUE  shift 69
	FALSE  shift 70
	NOT  shift 71
	'('  shift 72
	.  error

	expression  goto 126
	validCaseSwitch  goto 74
	expressionWithFun  goto 75


state 97
	expression : expression EQ . expression  (94)

	NUM  shift 67
	IDENT  shift 68
	TRUE  shift 69
	FALSE  shift 70
	NOT  shift 71
	'('  shift 72
	.  error

	expression  goto 127
	validCaseSwitch  goto 74
	expressionWithFun  goto 75


state 98
	expression : expression NEQ . expression  (97)

	NUM  shift 67
	IDENT  shift 68
	TRUE  shift 69
	FALSE  shift 70
	NOT  shift 71
	'('  shift 72
	.  error

	expression  goto 128
	validCaseSwitch  goto 74
	expressionWithFun  goto 75


state 99
	expression : expression LEQ . expression  (93)

	NUM  shift 67
	IDENT  shift 68
	TRUE  shift 69
	FALSE  shift 70
	NOT  shift 71
	'('  shift 72
	.  error

	expression  goto 129
	validCaseSwitch  goto 74
	expressionWithFun  goto 75


state 100
	expression : expression GEQ . expression  (95)

	NUM  shift 67
	IDENT  shift 68
	TRUE  shift 69
	FALSE  shift 70
	NOT  shift 71
	'('  shift 72
	.  error

	expression  goto 130
	validCaseSwitch  goto 74
	expressionWithFun  goto 75


state 101
	expression : expression '<' . expression  (92)

	NUM  shift 67
	IDENT  shift 68
	TRUE  shift 69
	FALSE  shift 70
	NOT  shift 71
	'('  shift 72
	.  error

	expression  goto 131
	validCaseSwitch  goto 74
	expressionWithFun  goto 75


state 102
	expression : expression '>' . expression  (96)

	NUM  shift 67
	IDENT  shift 68
	TRUE  shift 69
	FALSE  shift 70
	NOT  shift 71
	'('  shift 72
	.  error

	expression  goto 132
	validCaseSwitch  goto 74
	expressionWithFun  goto 75


state 103
	expression : expression '*' . expression  (87)

	NUM  shift 67
	IDENT  shift 68
	TRUE  shift 69
	FALSE  shift 70
	NOT  shift 71
	'('  shift 72
	.  error

	expression  goto 133
	validCaseSwitch  goto 74
	expressionWithFun  goto 75


state 104
	expression : expression '+' . expression  (85)

	NUM  shift 67
	IDENT  shift 68
	TRUE  shift 69
	FALSE  shift 70
	NOT  shift 71
	'('  shift 72
	.  error

	expression  goto 134
	validCaseSwitch  goto 74
	expressionWithFun  goto 75


state 105
	expression : expression '-' . expression  (86)

	NUM  shift 67
	IDENT  shift 68
	TRUE  shift 69
	FALSE  shift 70
	NOT  shift 71
	'('  shift 72
	.  error

	expression  goto 135
	validCaseSwitch  goto 74
	expressionWithFun  goto 75


state 106
	statement : RETURN expression $$8 . ';'  (30)

	';'  shift 136
	.  error


state 107
	statement : BREAK $$17 ';' .  (44)

	.  reduce 44


state 108
	statement : CONTINUE $$18 ';' .  (46)

	.  reduce 46


state 109
	statement : '{' statementList '}' .  (26)

	.  reduce 26


state 110
	attribWithExpr : IDENT . ATTRIB expression  (59)

	ATTRIB  shift 61
	.  error


state 111
	listScopeFunVar : attribWithExpr . extendListScopeFunVar  (70)
	extendListScopeFunVar : .  (72)

	','  shift 137
	';'  reduce 72

	extendListScopeFunVar  goto 138


state 112
	scopeFunVarDecls : typeVar $$22 listScopeFunVar .  (69)

	.  reduce 69


state 113
	ifStatement : ifStatementWithoutElse ELSE statement .  (49)

	.  reduce 49


state 114
	statement : SWITCH '(' expression ')' . '{' listSwitchCase '}'  (47)

	'{'  shift 139
	.  error


state 115
	statement : WHILE $$11 '(' expression . $$12 ')' $$13 statement  (37)
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)
	$$12 : .  (35)

	AND  shift 93
	OR  shift 94
	DIV  shift 95
	MOD  shift 96
	EQ  shift 97
	NEQ  shift 98
	LEQ  shift 99
	GEQ  shift 100
	'<'  shift 101
	'>'  shift 102
	'*'  shift 103
	'+'  shift 104
	'-'  shift 105
	')'  reduce 35

	$$12  goto 140


state 116
	statement : DO $$14 $$15 statement . WHILE '(' expression $$16 ')'  (41)

	WHILE  shift 141
	.  error


state 117
	scopeForVarDecls : typeVar . $$20 attribScopeForVars  (53)
	$$20 : .  (52)

	.  reduce 52

	$$20  goto 142


state 118
	statement : FOR '(' $$9 scopeForVarDecls . ';' expressionForDecls ';' counterForDecls ')' $$10 statement  (33)

	';'  shift 143
	.  error


state 119
	ifStatementWithoutElse : IF '(' expression $$19 . ')' statement  (51)

	')'  shift 144
	.  error


state 120
	argsSourceList : expression . expressionList  (82)
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)
	expressionList : .  (84)

	AND  shift 93
	OR  shift 94
	DIV  shift 95
	MOD  shift 96
	EQ  shift 97
	NEQ  shift 98
	LEQ  shift 99
	GEQ  shift 100
	'<'  shift 101
	'>'  shift 102
	'*'  shift 103
	'+'  shift 104
	'-'  shift 105
	','  shift 145
	')'  reduce 84

	expressionList  goto 146


state 121
	expressionWithFun : IDENT '(' argsSourceList . ')'  (81)

	')'  shift 147
	.  error


state 122
	expression : '(' expression ')' .  (99)

	.  reduce 99


state 123
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression AND expression .  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)

	.  reduce 91


state 124
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression OR expression .  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)

	.  reduce 90


state 125
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression DIV expression .  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)

	AND  shift 93
	OR  shift 94
	'+'  shift 104
	'-'  shift 105
	DIV  reduce 88
	MOD  reduce 88
	EQ  reduce 88
	NEQ  reduce 88
	LEQ  reduce 88
	GEQ  reduce 88
	'<'  reduce 88
	'>'  reduce 88
	'*'  reduce 88
	';'  reduce 88
	','  reduce 88
	')'  reduce 88


state 126
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression MOD expression .  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)

	AND  shift 93
	OR  shift 94
	'+'  shift 104
	'-'  shift 105
	DIV  reduce 89
	MOD  reduce 89
	EQ  reduce 89
	NEQ  reduce 89
	LEQ  reduce 89
	GEQ  reduce 89
	'<'  reduce 89
	'>'  reduce 89
	'*'  reduce 89
	';'  reduce 89
	','  reduce 89
	')'  reduce 89


state 127
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression EQ expression .  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)

	AND  shift 93
	OR  shift 94
	DIV  shift 95
	MOD  shift 96
	'*'  shift 103
	'+'  shift 104
	'-'  shift 105
	';'  reduce 94
	','  reduce 94
	')'  reduce 94


state 128
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)
	expression : expression NEQ expression .  (97)

	AND  shift 93
	OR  shift 94
	DIV  shift 95
	MOD  shift 96
	'*'  shift 103
	'+'  shift 104
	'-'  shift 105
	';'  reduce 97
	','  reduce 97
	')'  reduce 97


state 129
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression LEQ expression .  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)

	AND  shift 93
	OR  shift 94
	DIV  shift 95
	MOD  shift 96
	'*'  shift 103
	'+'  shift 104
	'-'  shift 105
	';'  reduce 93
	','  reduce 93
	')'  reduce 93


state 130
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression GEQ expression .  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)

	AND  shift 93
	OR  shift 94
	DIV  shift 95
	MOD  shift 96
	'*'  shift 103
	'+'  shift 104
	'-'  shift 105
	';'  reduce 95
	','  reduce 95
	')'  reduce 95


state 131
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression '<' expression .  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)

	AND  shift 93
	OR  shift 94
	DIV  shift 95
	MOD  shift 96
	'*'  shift 103
	'+'  shift 104
	'-'  shift 105
	';'  reduce 92
	','  reduce 92
	')'  reduce 92


state 132
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression '>' expression .  (96)
	expression : expression . NEQ expression  (97)

	AND  shift 93
	OR  shift 94
	DIV  shift 95
	MOD  shift 96
	'*'  shift 103
	'+'  shift 104
	'-'  shift 105
	';'  reduce 96
	','  reduce 96
	')'  reduce 96


state 133
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression '*' expression .  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)

	AND  shift 93
	OR  shift 94
	'+'  shift 104
	'-'  shift 105
	DIV  reduce 87
	MOD  reduce 87
	EQ  reduce 87
	NEQ  reduce 87
	LEQ  reduce 87
	GEQ  reduce 87
	'<'  reduce 87
	'>'  reduce 87
	'*'  reduce 87
	';'  reduce 87
	','  reduce 87
	')'  reduce 87


state 134
	expression : expression . '+' expression  (85)
	expression : expression '+' expression .  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)

	AND  shift 93
	OR  shift 94
	DIV  reduce 85
	MOD  reduce 85
	EQ  reduce 85
	NEQ  reduce 85
	LEQ  reduce 85
	GEQ  reduce 85
	'<'  reduce 85
	'>'  reduce 85
	'*'  reduce 85
	'+'  reduce 85
	'-'  reduce 85
	';'  reduce 85
	','  reduce 85
	')'  reduce 85


state 135
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression '-' expression .  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)

	AND  shift 93
	OR  shift 94
	DIV  reduce 86
	MOD  reduce 86
	EQ  reduce 86
	NEQ  reduce 86
	LEQ  reduce 86
	GEQ  reduce 86
	'<'  reduce 86
	'>'  reduce 86
	'*'  reduce 86
	'+'  reduce 86
	'-'  reduce 86
	';'  reduce 86
	','  reduce 86
	')'  reduce 86


state 136
	statement : RETURN expression $$8 ';' .  (30)

	.  reduce 30


state 137
	extendListScopeFunVar : ',' . listScopeFunVar  (71)

	IDENT  shift 110
	.  error

	attribWithExpr  goto 111
	listScopeFunVar  goto 148


state 138
	listScopeFunVar : attribWithExpr extendListScopeFunVar .  (70)

	.  reduce 70


state 139
	statement : SWITCH '(' expression ')' '{' . listSwitchCase '}'  (47)
	listSwitchCase : .  (62)

	CASE  shift 149
	DEFAULT  shift 150
	'}'  reduce 62

	listSwitchCase  goto 151


state 140
	statement : WHILE $$11 '(' expression $$12 . ')' $$13 statement  (37)

	')'  shift 152
	.  error


state 141
	statement : DO $$14 $$15 statement WHILE . '(' expression $$16 ')'  (41)

	'('  shift 153
	.  error


state 142
	scopeForVarDecls : typeVar $$20 . attribScopeForVars  (53)

	IDENT  shift 154
	.  error

	attribScopeForVars  goto 155


state 143
	statement : FOR '(' $$9 scopeForVarDecls ';' . expressionForDecls ';' counterForDecls ')' $$10 statement  (33)
	expressionForDecls : .  (74)

	NUM  shift 67
	IDENT  shift 68
	TRUE  shift 69
	FALSE  shift 70
	NOT  shift 71
	'('  shift 72
	';'  reduce 74

	expression  goto 156
	validCaseSwitch  goto 74
	expressionWithFun  goto 75
	expressionForDecls  goto 157


state 144
	ifStatementWithoutElse : IF '(' expression $$19 ')' . statement  (51)

	IDENT  shift 44
	INT  shift 4
	BOOL  shift 5
	DOUBLE  shift 7
	STRING  shift 8
	SWITCH  shift 45
	WHILE  shift 46
	DO  shift 47
	FOR  shift 48
	IF  shift 49
	RETURN  shift 50
	BREAK  shift 51
	CONTINUE  shift 52
	'{'  shift 53
	.  error

	typeVar  goto 55
	statement  goto 158
	scopeFunVarDecls  goto 57
	attribWithExpr  goto 58
	ifStatement  goto 59
	ifStatementWithoutElse  goto 60


state 145
	expressionList : ',' . argsSourceList  (83)

	NUM  shift 67
	IDENT  shift 68
	TRUE  shift 69
	FALSE  shift 70
	NOT  shift 71
	'('  shift 72
	.  error

	expression  goto 120
	validCaseSwitch  goto 74
	expressionWithFun  goto 75
	argsSourceList  goto 159


state 146
	argsSourceList : expression expressionList .  (82)

	.  reduce 82


state 147
	expressionWithFun : IDENT '(' argsSourceList ')' .  (81)

	.  reduce 81


state 148
	extendListScopeFunVar : ',' listScopeFunVar .  (71)

	.  reduce 71


state 149
	listSwitchCase : CASE . validCaseSwitch statementSwitchCase  (60)

	NUM  shift 67
	IDENT  shift 160
	TRUE  shift 69
	FALSE  shift 70
	.  error

	validCaseSwitch  goto 161


state 150
	listSwitchCase : DEFAULT . statementSwitchCase  (61)

	':'  shift 162
	.  error

	statementSwitchCase  goto 163


state 151
	statement : SWITCH '(' expression ')' '{' listSwitchCase . '}'  (47)

	'}'  shift 164
	.  error


state 152
	statement : WHILE $$11 '(' expression $$12 ')' . $$13 statement  (37)
	$$13 : .  (36)

	.  reduce 36

	$$13  goto 165


state 153
	statement : DO $$14 $$15 statement WHILE '(' . expression $$16 ')'  (41)

	NUM  shift 67
	IDENT  shift 68
	TRUE  shift 69
	FALSE  shift 70
	NOT  shift 71
	'('  shift 72
	.  error

	expression  goto 166
	validCaseSwitch  goto 74
	expressionWithFun  goto 75


state 154
	attribScopeForVars : IDENT . ATTRIB expression $$21 extendScopeForVars  (56)

	ATTRIB  shift 167
	.  error


state 155
	scopeForVarDecls : typeVar $$20 attribScopeForVars .  (53)

	.  reduce 53


state 156
	expressionForDecls : expression .  (73)
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)

	AND  shift 93
	OR  shift 94
	DIV  shift 95
	MOD  shift 96
	EQ  shift 97
	NEQ  shift 98
	LEQ  shift 99
	GEQ  shift 100
	'<'  shift 101
	'>'  shift 102
	'*'  shift 103
	'+'  shift 104
	'-'  shift 105
	';'  reduce 73


state 157
	statement : FOR '(' $$9 scopeForVarDecls ';' expressionForDecls . ';' counterForDecls ')' $$10 statement  (33)

	';'  shift 168
	.  error


state 158
	ifStatementWithoutElse : IF '(' expression $$19 ')' statement .  (51)

	.  reduce 51


state 159
	expressionList : ',' argsSourceList .  (83)

	.  reduce 83


state 160
	validCaseSwitch : IDENT .  (63)

	.  reduce 63


state 161
	listSwitchCase : CASE validCaseSwitch . statementSwitchCase  (60)

	':'  shift 162
	.  error

	statementSwitchCase  goto 169


state 162
	statementSwitchCase : ':' . statement listSwitchCase  (67)

	IDENT  shift 44
	INT  shift 4
	BOOL  shift 5
	DOUBLE  shift 7
	STRING  shift 8
	SWITCH  shift 45
	WHILE  shift 46
	DO  shift 47
	FOR  shift 48
	IF  shift 49
	RETURN  shift 50
	BREAK  shift 51
	CONTINUE  shift 52
	'{'  shift 53
	.  error

	typeVar  goto 55
	statement  goto 170
	scopeFunVarDecls  goto 57
	attribWithExpr  goto 58
	ifStatement  goto 59
	ifStatementWithoutElse  goto 60


state 163
	listSwitchCase : DEFAULT statementSwitchCase .  (61)

	.  reduce 61


state 164
	statement : SWITCH '(' expression ')' '{' listSwitchCase '}' .  (47)

	.  reduce 47


state 165
	statement : WHILE $$11 '(' expression $$12 ')' $$13 . statement  (37)

	IDENT  shift 44
	INT  shift 4
	BOOL  shift 5
	DOUBLE  shift 7
	STRING  shift 8
	SWITCH  shift 45
	WHILE  shift 46
	DO  shift 47
	FOR  shift 48
	IF  shift 49
	RETURN  shift 50
	BREAK  shift 51
	CONTINUE  shift 52
	'{'  shift 53
	.  error

	typeVar  goto 55
	statement  goto 171
	scopeFunVarDecls  goto 57
	attribWithExpr  goto 58
	ifStatement  goto 59
	ifStatementWithoutElse  goto 60


state 166
	statement : DO $$14 $$15 statement WHILE '(' expression . $$16 ')'  (41)
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)
	$$16 : .  (40)

	AND  shift 93
	OR  shift 94
	DIV  shift 95
	MOD  shift 96
	EQ  shift 97
	NEQ  shift 98
	LEQ  shift 99
	GEQ  shift 100
	'<'  shift 101
	'>'  shift 102
	'*'  shift 103
	'+'  shift 104
	'-'  shift 105
	')'  reduce 40

	$$16  goto 172


state 167
	attribScopeForVars : IDENT ATTRIB . expression $$21 extendScopeForVars  (56)

	NUM  shift 67
	IDENT  shift 68
	TRUE  shift 69
	FALSE  shift 70
	NOT  shift 71
	'('  shift 72
	.  error

	expression  goto 173
	validCaseSwitch  goto 74
	expressionWithFun  goto 75


state 168
	statement : FOR '(' $$9 scopeForVarDecls ';' expressionForDecls ';' . counterForDecls ')' $$10 statement  (33)
	counterForDecls : .  (76)

	IDENT  shift 174
	')'  reduce 76

	counterForDecls  goto 175


state 169
	listSwitchCase : CASE validCaseSwitch statementSwitchCase .  (60)

	.  reduce 60


state 170
	statementSwitchCase : ':' statement . listSwitchCase  (67)
	listSwitchCase : .  (62)

	CASE  shift 149
	DEFAULT  shift 150
	'}'  reduce 62

	listSwitchCase  goto 176


state 171
	statement : WHILE $$11 '(' expression $$12 ')' $$13 statement .  (37)

	.  reduce 37


state 172
	statement : DO $$14 $$15 statement WHILE '(' expression $$16 . ')'  (41)

	')'  shift 177
	.  error


state 173
	attribScopeForVars : IDENT ATTRIB expression . $$21 extendScopeForVars  (56)
	expression : expression . '+' expression  (85)
	expression : expression . '-' expression  (86)
	expression : expression . '*' expression  (87)
	expression : expression . DIV expression  (88)
	expression : expression . MOD expression  (89)
	expression : expression . OR expression  (90)
	expression : expression . AND expression  (91)
	expression : expression . '<' expression  (92)
	expression : expression . LEQ expression  (93)
	expression : expression . EQ expression  (94)
	expression : expression . GEQ expression  (95)
	expression : expression . '>' expression  (96)
	expression : expression . NEQ expression  (97)
	$$21 : .  (55)

	AND  shift 93
	OR  shift 94
	DIV  shift 95
	MOD  shift 96
	EQ  shift 97
	NEQ  shift 98
	LEQ  shift 99
	GEQ  shift 100
	'<'  shift 101
	'>'  shift 102
	'*'  shift 103
	'+'  shift 104
	'-'  shift 105
	';'  reduce 55
	','  reduce 55

	$$21  goto 178


state 174
	counterForDecls : IDENT . operatorIncr listCounterForDecls  (75)

	INCREMENT  shift 179
	DECREMENT  shift 180
	.  error

	operatorIncr  goto 181


state 175
	statement : FOR '(' $$9 scopeForVarDecls ';' expressionForDecls ';' counterForDecls . ')' $$10 statement  (33)

	')'  shift 182
	.  error


state 176
	statementSwitchCase : ':' statement listSwitchCase .  (67)

	.  reduce 67


state 177
	statement : DO $$14 $$15 statement WHILE '(' expression $$16 ')' .  (41)

	.  reduce 41


state 178
	attribScopeForVars : IDENT ATTRIB expression $$21 . extendScopeForVars  (56)
	extendScopeForVars : .  (58)

	','  shift 183
	';'  reduce 58

	extendScopeForVars  goto 184


state 179
	operatorIncr : INCREMENT .  (79)

	.  reduce 79


state 180
	operatorIncr : DECREMENT .  (80)

	.  reduce 80


state 181
	counterForDecls : IDENT operatorIncr . listCounterForDecls  (75)
	listCounterForDecls : .  (78)

	','  shift 185
	')'  reduce 78

	listCounterForDecls  goto 186


state 182
	statement : FOR '(' $$9 scopeForVarDecls ';' expressionForDecls ';' counterForDecls ')' . $$10 statement  (33)
	$$10 : .  (32)

	.  reduce 32

	$$10  goto 187


state 183
	extendScopeForVars : ',' . attribScopeForVars  (57)

	IDENT  shift 154
	.  error

	attribScopeForVars  goto 188


state 184
	attribScopeForVars : IDENT ATTRIB expression $$21 extendScopeForVars .  (56)

	.  reduce 56


state 185
	listCounterForDecls : ',' . counterForDecls  (77)
	counterForDecls : .  (76)

	IDENT  shift 174
	')'  reduce 76

	counterForDecls  goto 189


state 186
	counterForDecls : IDENT operatorIncr listCounterForDecls .  (75)

	.  reduce 75


state 187
	statement : FOR '(' $$9 scopeForVarDecls ';' expressionForDecls ';' counterForDecls ')' $$10 . statement  (33)

	IDENT  shift 44
	INT  shift 4
	BOOL  shift 5
	DOUBLE  shift 7
	STRING  shift 8
	SWITCH  shift 45
	WHILE  shift 46
	DO  shift 47
	FOR  shift 48
	IF  shift 49
	RETURN  shift 50
	BREAK  shift 51
	CONTINUE  shift 52
	'{'  shift 53
	.  error

	typeVar  goto 55
	statement  goto 190
	scopeFunVarDecls  goto 57
	attribWithExpr  goto 58
	ifStatement  goto 59
	ifStatementWithoutElse  goto 60


state 188
	extendScopeForVars : ',' attribScopeForVars .  (57)

	.  reduce 57


state 189
	listCounterForDecls : ',' counterForDecls .  (77)

	.  reduce 77


state 190
	statement : FOR '(' $$9 scopeForVarDecls ';' expressionForDecls ';' counterForDecls ')' $$10 statement .  (33)

	.  reduce 33


State 60 contains 1 shift/reduce conflict.


48 terminals, 55 nonterminals
107 grammar rules, 191 states
